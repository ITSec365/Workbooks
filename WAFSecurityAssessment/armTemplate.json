{
  "contentVersion": "1.0.0.0",
  "parameters": {
    "workbookDisplayName": {
      "type": "string",
      "defaultValue": "WAFSAaudit",
      "metadata": {
        "description": "The friendly name for the workbook that is used in the Gallery or Saved List.  This name must be unique within a resource group."
      }
    },
    "workbookType": {
      "type": "string",
      "defaultValue": "workbook",
      "metadata": {
        "description": "The gallery that the workbook will been shown under. Supported values include workbook, tsg, etc. Usually, this is 'workbook'"
      }
    },
    "workbookSourceId": {
      "type": "string",
      "defaultValue": "azure security center",
      "metadata": {
        "description": "The id of resource instance to which the workbook will be associated"
      }
    },
    "workbookId": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "metadata": {
        "description": "The unique guid for this workbook instance"
      }
    }
  },
  "variables": {
    "workbookContent": {
      "version": "Notebook/1.0",
      "items": [
        {
          "type": 1,
          "content": {
            "json": "# Well Architected Framework Security Assessment"
          },
          "name": "title"
        },
        {
          "type": 9,
          "content": {
            "version": "KqlParameterItem/1.0",
            "crossComponentResources": [
              "{SubscriptionName}"
            ],
            "parameters": [
              {
                "id": "aff77190-c0d2-483c-8fb0-343db7ef4bd0",
                "version": "KqlParameterItem/1.0",
                "name": "SubscriptionName",
                "type": 6,
                "isRequired": true,
                "multiSelect": true,
                "quote": "'",
                "delimiter": ",",
                "value": [
                  "/subscriptions/d1d8779d-38d7-4f06-91db-9cbc8de0176f"
                ],
                "typeSettings": {
                  "additionalResourceOptions": [
                    "value::all"
                  ],
                  "includeAll": false
                },
                "timeContext": {
                  "durationMs": 86400000
                }
              },
              {
                "id": "02e8bdc5-5d26-4f91-b463-b7db790d9d1a",
                "version": "KqlParameterItem/1.0",
                "name": "Workspace",
                "type": 5,
                "description": "Select the Log Analytics Workspace storing Azure AD Signin Logs",
                "query": "resources\r\n| where type =~ 'microsoft.operationalinsights/workspaces'\r\n| project id",
                "crossComponentResources": [
                  "{SubscriptionName}"
                ],
                "value": "/subscriptions/d1d8779d-38d7-4f06-91db-9cbc8de0176f/resourceGroups/soc/providers/Microsoft.OperationalInsights/workspaces/cybersecuritysoc",
                "typeSettings": {
                  "additionalResourceOptions": [],
                  "showDefault": false
                },
                "queryType": 1,
                "resourceType": "microsoft.resourcegraph/resources"
              },
              {
                "id": "608c0067-1fc3-4b78-956b-0d0ff25a0fc8",
                "version": "KqlParameterItem/1.0",
                "name": "TimeRange",
                "type": 4,
                "description": "Select the time range to view the logs",
                "value": {
                  "durationMs": 86400000
                },
                "typeSettings": {
                  "selectableValues": [
                    {
                      "durationMs": 86400000
                    },
                    {
                      "durationMs": 604800000
                    },
                    {
                      "durationMs": 2592000000
                    }
                  ],
                  "allowCustom": true
                }
              }
            ],
            "style": "pills",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          "name": "parameters - 1"
        },
        {
          "type": 1,
          "content": {
            "json": "***Well Architected Framework Security Assessment Technical Controls***\r\nThis workbook assists in answering the Well Architected Framework Security Assessment Technical Controls. It is designed to  verify the deployment status of the selected technical controls mentioned  in the Well Architected Framework Security Assessment. This will enable the Security team to  gain the visibility of their  cloud security posture and hardening. This Workbook utlizes Azure Resource Graph (ARG) queries to show security recommendations based on Azure Security Benchmark standard and to provide the inventory of related resources. It also uses Azure AD Logs and Security Alerts to cover the sections under AzureAD Logs tab. It enables the security team to confirm if the specified best practice is deployed or not based on the recommedation's compliance state and available resources as applicable. Note the assessment questionnaire  is available in https://aka.ms/assessments and this workbook covers only technical controls as applicable. ",
            "style": "info"
          },
          "name": "text - 25"
        },
        {
          "type": 11,
          "content": {
            "version": "LinkItem/1.0",
            "style": "tabs",
            "tabStyle": "bigger",
            "links": [
              {
                "id": "61e9db71-fb3e-430a-892c-1aecdf1ec7d8",
                "cellValue": "wbtab",
                "linkTarget": "parameter",
                "linkLabel": "Threat Analysis",
                "subTarget": "threat",
                "preText": "Threat Analysis",
                "style": "link"
              },
              {
                "id": "0065cdb6-f75e-4666-8807-ffa2f3decb5b",
                "cellValue": "wbtab",
                "linkTarget": "parameter",
                "linkLabel": "Compliance and Governance",
                "subTarget": "compliance",
                "preText": "Compliance and Governance",
                "style": "link"
              },
              {
                "id": "144b4ab3-7c4e-459e-9fb9-98304d8f2872",
                "cellValue": "wbtab",
                "linkTarget": "parameter",
                "linkLabel": "Security Update",
                "subTarget": "update",
                "style": "link"
              },
              {
                "id": "cc5c8ee1-1503-47d1-9d48-478193a9b898",
                "cellValue": "wbtab",
                "linkTarget": "parameter",
                "linkLabel": "Network",
                "subTarget": "network",
                "style": "link"
              },
              {
                "id": "1f2bd3c1-c051-4fb7-a84d-b0958b8119b9",
                "cellValue": "wbtab",
                "linkTarget": "parameter",
                "linkLabel": "Encryption",
                "subTarget": "encryption",
                "style": "link"
              },
              {
                "id": "175a9562-5c0f-476a-a00a-10722e79e6f4",
                "cellValue": "wbtab",
                "linkTarget": "parameter",
                "linkLabel": "Identity",
                "subTarget": "identity",
                "style": "link"
              },
              {
                "id": "2daeeed3-4bc9-4117-8006-72472053e3ca",
                "cellValue": "wbtab",
                "linkTarget": "parameter",
                "linkLabel": "AzureAD Logs",
                "subTarget": "logs",
                "style": "link"
              }
            ]
          },
          "name": "links - 2"
        },
        {
          "type": 3,
          "content": {
            "version": "KqlItem/1.0",
            "query": "securityresources\r\n    | where type == \"microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols/regulatorycomplianceassessments\"\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | where complianceStandardId ==  \"Azure Security Benchmark\"\r\n    | join kind = leftouter(\r\n    securityresources\r\n    | where type == \"microsoft.security/assessments\") on subscriptionId, name\r\n    | extend complianceState = properties.state\r\n    | extend resourceSource = tolower(tostring(properties1.resourceDetails.Source))\r\n    | extend recommendationId = id1\r\n    | extend resourceId = trim(' ', tolower(tostring(case(resourceSource =~ 'azure', properties1.resourceDetails.Id,\r\n                                                        resourceSource =~ 'gcp', properties1.resourceDetails.GcpResourceId,\r\n                                                        resourceSource =~ 'aws', properties1.resourceDetails.AwsResourceId,\r\n                                                        extract('^(.+)/providers/Microsoft.Security/assessments/.+$',1,recommendationId)))))\r\n    | extend regexResourceId = extract_all(@\"/providers/[^/]+(?:/([^/]+)/[^/]+(?:/[^/]+/[^/]+)?)?/([^/]+)/([^/]+)$\", resourceId)[0]\r\n    | extend resourceType = iff(regexResourceId[1] != \"\", regexResourceId[1], iff(regexResourceId[0] != \"\", regexResourceId[0], \"subscriptions\"))\r\n    | extend resourceName = regexResourceId[2]\r\n    | extend recommendationName = name\r\n    | extend RecommendationName = properties1.displayName\r\n    | extend description = properties1.metadata.description\r\n    | extend remediationSteps = properties1.metadata.remediationDescription\r\n    | extend severity = properties1.metadata.severity\r\n    | extend state = properties1.status.code\r\n    | extend notApplicableReason = properties1.status.cause\r\n    | extend RecommendationLink = properties1.links.azurePortal\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | extend complianceControlId = extract(@\"/regulatoryComplianceControls/([^/]*)\", 1, id)\r\n    | join kind = leftouter (securityresources\r\n    | where type == \"microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols\"\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | where complianceStandardId == \"Azure Security Benchmark\"\r\n    | extend  controlName = tostring(properties.description)\r\n    | project controlId = name, controlName\r\n    | distinct  *) on $right.controlId == $left.complianceControlId\r\n    | extend RecommendationName = tostring(properties.description)\r\n    | summarize Failed = countif(state == \"Unhealthy\"), Passed = countif(state == \"Healthy\" or complianceState == \"Passed\"), Total = countif(state == \"Unhealthy\" or state == \"Healthy\" or complianceState == \"Passed\") by RecommendationName, ControlID = controlId\r\n    | extend PassedControls = (Passed/todouble(Total))*100\r\n| join kind = leftouter (securityresources\r\n    | where type == \"microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols/regulatorycomplianceassessments\"\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | where complianceStandardId ==  \"Azure Security Benchmark\"\r\n    | extend RecommendationName = tostring(properties.description)\r\n    | extend RecommendationLink = tostring(properties.assessmentDetailsLink)\r\n    | project RecommendationName, RecommendationLink, name) on RecommendationName \r\n| extend Remediate=RecommendationLink\r\n| where ControlID == \"LT.1\"\r\n| parse Remediate with * '/#blade/Microsoft_Azure_Security/RecommendationsBlade/assessmentKey/' assessmentKey '/' *\r\n| extend overallstate= iff(PassedControls==100, \"Passed\", \"Failed\")\r\n| distinct RecommendationName, Total,  PassedControls, overallstate,Remediate,Passed, Failed, assessmentKey\r\n| sort by Total, Passed desc\r\n| limit 250",
            "size": 1,
            "title": "Threat protection was addressed for this workload",
            "showExportToExcel": true,
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "crossComponentResources": [
              "{SubscriptionName}"
            ],
            "gridSettings": {
              "formatters": [
                {
                  "columnMatch": "RecommendationName",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "success",
                        "text": "{0}{1}"
                      }
                    ]
                  }
                },
                {
                  "columnMatch": "Total",
                  "formatter": 5,
                  "formatOptions": {
                    "compositeBarSettings": {
                      "labelText": "[[[\"Passed\"]/[\"Total\"]]",
                      "columnSettings": [
                        {
                          "columnName": "Passed",
                          "color": "green"
                        },
                        {
                          "columnName": "Failed",
                          "color": "redBright"
                        }
                      ]
                    }
                  },
                  "tooltipFormat": {
                    "tooltip": "Passed/Total"
                  }
                },
                {
                  "columnMatch": "PassedControls",
                  "formatter": 5
                },
                {
                  "columnMatch": "Remediate",
                  "formatter": 7,
                  "formatOptions": {
                    "linkTarget": "OpenBlade",
                    "linkLabel": "view recommendation",
                    "bladeOpenContext": {
                      "bladeName": "RecommendationsBlade",
                      "extensionName": "Microsoft_Azure_Security",
                      "bladeParameters": [
                        {
                          "name": "assessmentKey",
                          "source": "column",
                          "value": "assessmentKey"
                        }
                      ]
                    }
                  }
                },
                {
                  "columnMatch": "Passed",
                  "formatter": 5
                },
                {
                  "columnMatch": "Failed",
                  "formatter": 5
                },
                {
                  "columnMatch": "assessmentKey",
                  "formatter": 5
                },
                {
                  "columnMatch": "overallstate",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": "contains",
                        "thresholdValue": "Passed",
                        "representation": "success",
                        "text": "{0}{1}"
                      },
                      {
                        "operator": "contains",
                        "thresholdValue": "Failed",
                        "representation": "failed",
                        "text": "{0}{1}"
                      },
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "success",
                        "text": "{0}{1}"
                      }
                    ]
                  }
                },
                {
                  "columnMatch": "Paased Resource Count",
                  "formatter": 22,
                  "formatOptions": {
                    "compositeBarSettings": {
                      "labelText": "[[[\"Passed\"]/[\"Total\"]]",
                      "columnSettings": [
                        {
                          "columnName": "Passed",
                          "color": "green"
                        },
                        {
                          "columnName": "Failed",
                          "color": "redBright"
                        }
                      ]
                    }
                  }
                }
              ],
              "labelSettings": [
                {
                  "columnId": "overallstate",
                  "label": "ComplianceState"
                }
              ]
            }
          },
          "conditionalVisibility": {
            "parameterName": "wbtab",
            "comparison": "isEqualTo",
            "value": "threat"
          },
          "name": "ThreatAnalysis"
        },
        {
          "type": 3,
          "content": {
            "version": "KqlItem/1.0",
            "query": "securityresources\r\n| where type == \"microsoft.security/securescores\"\r\n| extend subscriptionSecureScore = round(100 * bin((todouble(properties.score.current))/ todouble(properties.score.max), 0.001))\r\n| where subscriptionSecureScore > 0\r\n| project subscriptionSecureScore, subscriptionId, CloudPlatform=properties.environment\r\n| order by subscriptionSecureScore asc",
            "size": 1,
            "title": "Security posture was evaluated with standard benchmarks (CIS Control Framework, MITRE framework etc.).",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "crossComponentResources": [
              "{SubscriptionName}"
            ],
            "gridSettings": {
              "formatters": [
                {
                  "columnMatch": "subscriptionSecureScore",
                  "formatter": 8,
                  "formatOptions": {
                    "min": 0,
                    "max": 100,
                    "palette": "redGreen"
                  },
                  "numberFormat": {
                    "unit": 1,
                    "options": {
                      "style": "decimal"
                    }
                  }
                },
                {
                  "columnMatch": "subscriptionId",
                  "formatter": 15,
                  "formatOptions": {
                    "linkTarget": null,
                    "showIcon": true
                  }
                }
              ]
            }
          },
          "conditionalVisibility": {
            "parameterName": "wbtab",
            "comparison": "isEqualTo",
            "value": "threat"
          },
          "name": "securescore"
        },
        {
          "type": 3,
          "content": {
            "version": "KqlItem/1.0",
            "query": "policyresources\r\n| where type =~ 'microsoft.authorization/policyassignments'\r\n| extend [\"Display Name\"] = tostring(properties.displayName)\r\n| extend Prop = parse_json(properties)\r\n| extend [\"Assigned By\"] = tostring(properties.metadata.assignedBy)\r\n//| extend Type = strcat(split(properties.policyDefinitionId,'/')[7])\r\n//| where [\"Assigned By\"] == \"Security Center\"\r\n| project  [\"Display Name\"], [\"Assigned By\"], [\"Subscription\"]=subscriptionId",
            "size": 1,
            "title": "Azure Policies are used to enforce and control security and organizational standards",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "crossComponentResources": [
              "{SubscriptionName}"
            ]
          },
          "conditionalVisibility": {
            "parameterName": "wbtab",
            "comparison": "isEqualTo",
            "value": "compliance"
          },
          "name": "policy"
        },
        {
          "type": 3,
          "content": {
            "version": "KqlItem/1.0",
            "query": "resources\r\n| summarize count() by type\r\n| sort by count_ desc ",
            "size": 1,
            "title": "All cloud services used by this workload are identified.",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "crossComponentResources": [
              "{SubscriptionName}"
            ],
            "visualization": "tiles",
            "tileSettings": {
              "titleContent": {
                "columnMatch": "type",
                "formatter": 16,
                "formatOptions": {
                  "showIcon": true
                }
              },
              "leftContent": {
                "columnMatch": "count_",
                "formatter": 12,
                "formatOptions": {
                  "palette": "auto"
                },
                "numberFormat": {
                  "unit": 17,
                  "options": {
                    "style": "decimal",
                    "maximumFractionDigits": 2,
                    "maximumSignificantDigits": 3
                  }
                }
              },
              "showBorder": true
            }
          },
          "conditionalVisibility": {
            "parameterName": "wbtab",
            "comparison": "isEqualTo",
            "value": "compliance"
          },
          "name": "cloudservices"
        },
        {
          "type": 3,
          "content": {
            "version": "KqlItem/1.0",
            "query": "securityresources\r\n    | where type == \"microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols/regulatorycomplianceassessments\"\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | where complianceStandardId ==  \"Azure Security Benchmark\"\r\n    | join kind = leftouter(\r\n    securityresources\r\n    | where type == \"microsoft.security/assessments\") on subscriptionId, name\r\n    | extend complianceState = properties.state\r\n    | extend resourceSource = tolower(tostring(properties1.resourceDetails.Source))\r\n    | extend recommendationId = id1\r\n    | extend resourceId = trim(' ', tolower(tostring(case(resourceSource =~ 'azure', properties1.resourceDetails.Id,\r\n                                                        resourceSource =~ 'gcp', properties1.resourceDetails.GcpResourceId,\r\n                                                        resourceSource =~ 'aws', properties1.resourceDetails.AwsResourceId,\r\n                                                        extract('^(.+)/providers/Microsoft.Security/assessments/.+$',1,recommendationId)))))\r\n    | extend regexResourceId = extract_all(@\"/providers/[^/]+(?:/([^/]+)/[^/]+(?:/[^/]+/[^/]+)?)?/([^/]+)/([^/]+)$\", resourceId)[0]\r\n    | extend resourceType = iff(regexResourceId[1] != \"\", regexResourceId[1], iff(regexResourceId[0] != \"\", regexResourceId[0], \"subscriptions\"))\r\n    | extend resourceName = regexResourceId[2]\r\n    | extend recommendationName = name\r\n    | extend RecommendationName = properties1.displayName\r\n    | extend description = properties1.metadata.description\r\n    | extend remediationSteps = properties1.metadata.remediationDescription\r\n    | extend severity = properties1.metadata.severity\r\n    | extend state = properties1.status.code\r\n    | extend notApplicableReason = properties1.status.cause\r\n    | extend RecommendationLink = properties1.links.azurePortal\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | extend complianceControlId = extract(@\"/regulatoryComplianceControls/([^/]*)\", 1, id)\r\n    | join kind = leftouter (securityresources\r\n    | where type == \"microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols\"\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | where complianceStandardId == \"Azure Security Benchmark\"\r\n    | extend  controlName = tostring(properties.description)\r\n    | project controlId = name, controlName\r\n    | distinct  *) on $right.controlId == $left.complianceControlId\r\n    | extend RecommendationName = tostring(properties.description)\r\n    | summarize Failed = countif(state == \"Unhealthy\"), Passed = countif(state == \"Healthy\" or complianceState == \"Passed\"), Total = countif(state == \"Unhealthy\" or state == \"Healthy\" or complianceState == \"Passed\") by RecommendationName, ControlID = controlId\r\n    | extend PassedControls = (Passed/todouble(Total))*100\r\n| join kind = leftouter (securityresources\r\n    | where type == \"microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols/regulatorycomplianceassessments\"\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | where complianceStandardId ==  \"Azure Security Benchmark\"\r\n    | extend RecommendationName = tostring(properties.description)\r\n    | extend RecommendationLink = tostring(properties.assessmentDetailsLink)\r\n    | project RecommendationName, RecommendationLink, name) on RecommendationName \r\n| extend Remediate=RecommendationLink\r\n| where ControlID in ( \"PV.5\")\r\n| parse Remediate with * '/#blade/Microsoft_Azure_Security/RecommendationsBlade/assessmentKey/' assessmentKey '/' *\r\n| extend overallstate= iff(PassedControls==100, \"Passed\", \"Failed\")\r\n| distinct RecommendationName, Total,  PassedControls, overallstate,Remediate,Passed, Failed, assessmentKey\r\n| sort by Total, Passed desc\r\n| limit 250",
            "size": 1,
            "title": "Technologies and frameworks used in this workload are fully understood, including their vulnerabilities.",
            "showExportToExcel": true,
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "crossComponentResources": [
              "{SubscriptionName}"
            ],
            "gridSettings": {
              "formatters": [
                {
                  "columnMatch": "RecommendationName",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "success",
                        "text": "{0}{1}"
                      }
                    ]
                  }
                },
                {
                  "columnMatch": "Total",
                  "formatter": 5,
                  "formatOptions": {
                    "compositeBarSettings": {
                      "labelText": "[[[\"Passed\"]/[\"Total\"]]",
                      "columnSettings": [
                        {
                          "columnName": "Passed",
                          "color": "green"
                        },
                        {
                          "columnName": "Failed",
                          "color": "redBright"
                        }
                      ]
                    }
                  },
                  "tooltipFormat": {
                    "tooltip": "Passed/Total"
                  }
                },
                {
                  "columnMatch": "PassedControls",
                  "formatter": 5,
                  "numberFormat": {
                    "unit": 1,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true
                    }
                  }
                },
                {
                  "columnMatch": "overallstate",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": "contains",
                        "thresholdValue": "Passed",
                        "representation": "success",
                        "text": "{0}{1}"
                      },
                      {
                        "operator": "contains",
                        "thresholdValue": "Failed",
                        "representation": "failed",
                        "text": "{0}{1}"
                      },
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "success",
                        "text": "{0}{1}"
                      }
                    ]
                  }
                },
                {
                  "columnMatch": "Remediate",
                  "formatter": 7,
                  "formatOptions": {
                    "linkTarget": "OpenBlade",
                    "linkLabel": "view recommendation",
                    "bladeOpenContext": {
                      "bladeName": "RecommendationsBlade",
                      "extensionName": "Microsoft_Azure_Security",
                      "bladeParameters": [
                        {
                          "name": "assessmentKey",
                          "source": "column",
                          "value": "assessmentKey"
                        }
                      ]
                    }
                  }
                },
                {
                  "columnMatch": "Passed",
                  "formatter": 5
                },
                {
                  "columnMatch": "Failed",
                  "formatter": 5
                },
                {
                  "columnMatch": "assessmentKey",
                  "formatter": 5
                }
              ],
              "labelSettings": [
                {
                  "columnId": "overallstate",
                  "label": "ComplianceState"
                }
              ]
            }
          },
          "conditionalVisibility": {
            "parameterName": "wbtab",
            "comparison": "isEqualTo",
            "value": "update"
          },
          "name": "Vulnerabiltyrecommendation"
        },
        {
          "type": 3,
          "content": {
            "version": "KqlItem/1.0",
            "query": "securityresources\r\n| where type == \"microsoft.security/assessments/subassessments\"\r\n| extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n| where assessmentKey == \"4ab6e3c5-74dd-8b35-9ab9-f61b30875b27\" and properties.status.code == 'Unhealthy'\r\n| project Resource = iif(isempty(properties.resourceDetails.id),strcat(split(properties.resourceDetails.workspaceId, '/')[8]), properties.resourceDetails.id), subscriptionId, severity = tostring(parse_json(properties).status.severity), status = tostring(parse_json(properties).status.code), description = tostring(parse_json(properties).displayName), VulnId = tostring(parse_json(properties).id), resourceGroup = substring(id, 0, indexof(id, '/providers'))\r\n| summarize dcount(VulnId) by Resource, severity, VulnId, description\r\n| summarize Total = count(dcount_VulnId), sevH=countif(severity=='High'), sevM=countif(severity=='Medium'), sevL=countif(severity=='Low') by Resource\r\n| order by sevH desc",
            "size": 1,
            "title": "Security updates to VMs are applied in a timely manner",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "crossComponentResources": [
              "{SubscriptionName}"
            ],
            "gridSettings": {
              "formatters": [
                {
                  "columnMatch": "sevH",
                  "formatter": 3,
                  "formatOptions": {
                    "palette": "redBright"
                  }
                },
                {
                  "columnMatch": "sevM",
                  "formatter": 3,
                  "formatOptions": {
                    "palette": "yellow"
                  }
                },
                {
                  "columnMatch": "sevL",
                  "formatter": 3,
                  "formatOptions": {
                    "palette": "blueDark"
                  }
                }
              ],
              "labelSettings": [
                {
                  "columnId": "sevH",
                  "label": "High"
                },
                {
                  "columnId": "sevM",
                  "label": "Medium"
                },
                {
                  "columnId": "sevL",
                  "label": "Low"
                }
              ]
            }
          },
          "conditionalVisibility": {
            "parameterName": "wbtab",
            "comparison": "isEqualTo",
            "value": "update"
          },
          "name": "missingupdate"
        },
        {
          "type": 3,
          "content": {
            "version": "KqlItem/1.0",
            "query": "securityresources\r\n    | where type == \"microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols/regulatorycomplianceassessments\"\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | where complianceStandardId ==  \"Azure Security Benchmark\"\r\n    | join kind = leftouter(\r\n    securityresources\r\n    | where type == \"microsoft.security/assessments\") on subscriptionId, name\r\n    | extend complianceState = properties.state\r\n    | extend resourceSource = tolower(tostring(properties1.resourceDetails.Source))\r\n    | extend recommendationId = id1\r\n    | extend resourceId = trim(' ', tolower(tostring(case(resourceSource =~ 'azure', properties1.resourceDetails.Id,\r\n                                                        resourceSource =~ 'gcp', properties1.resourceDetails.GcpResourceId,\r\n                                                        resourceSource =~ 'aws', properties1.resourceDetails.AwsResourceId,\r\n                                                        extract('^(.+)/providers/Microsoft.Security/assessments/.+$',1,recommendationId)))))\r\n    | extend regexResourceId = extract_all(@\"/providers/[^/]+(?:/([^/]+)/[^/]+(?:/[^/]+/[^/]+)?)?/([^/]+)/([^/]+)$\", resourceId)[0]\r\n    | extend resourceType = iff(regexResourceId[1] != \"\", regexResourceId[1], iff(regexResourceId[0] != \"\", regexResourceId[0], \"subscriptions\"))\r\n    | extend resourceName = regexResourceId[2]\r\n    | extend recommendationName = name\r\n    | extend RecommendationName = properties1.displayName\r\n    | extend description = properties1.metadata.description\r\n    | extend remediationSteps = properties1.metadata.remediationDescription\r\n    | extend severity = properties1.metadata.severity\r\n    | extend state = properties1.status.code\r\n    | extend notApplicableReason = properties1.status.cause\r\n    | extend RecommendationLink = properties1.links.azurePortal\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | extend complianceControlId = extract(@\"/regulatoryComplianceControls/([^/]*)\", 1, id)\r\n    | join kind = leftouter (securityresources\r\n    | where type == \"microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols\"\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | where complianceStandardId == \"Azure Security Benchmark\"\r\n    | extend  controlName = tostring(properties.description)\r\n    | project controlId = name, controlName\r\n    | distinct  *) on $right.controlId == $left.complianceControlId\r\n    | extend RecommendationName = tostring(properties.description)\r\n    | summarize Failed = countif(state == \"Unhealthy\"), Passed = countif(state == \"Healthy\" or complianceState == \"Passed\"), Total = countif(state == \"Unhealthy\" or state == \"Healthy\" or complianceState == \"Passed\") by RecommendationName, ControlID = controlId\r\n    | extend PassedControls = (Passed/todouble(Total))*100\r\n| join kind = leftouter (securityresources\r\n    | where type == \"microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols/regulatorycomplianceassessments\"\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | where complianceStandardId ==  \"Azure Security Benchmark\"\r\n    | extend RecommendationName = tostring(properties.description)\r\n    | extend RecommendationLink = tostring(properties.assessmentDetailsLink)\r\n    | project RecommendationName, RecommendationLink, name) on RecommendationName \r\n| extend Remediate=RecommendationLink\r\n| where RecommendationName has \"notification\"\r\n| parse Remediate with * '/#blade/Microsoft_Azure_Security/RecommendationsBlade/assessmentKey/' assessmentKey '/' *\r\n| extend overallstate= iff(PassedControls==100, \"Passed\", \"Failed\")\r\n| distinct RecommendationName, Total,  PassedControls, overallstate,Remediate,Passed, Failed, assessmentKey\r\n| sort by Total, Passed desc\r\n| limit 250",
            "size": 1,
            "title": "A designated point of contact was assigned for this workload to receive Azure incident notifications from Microsoft",
            "showExportToExcel": true,
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "crossComponentResources": [
              "{SubscriptionName}"
            ],
            "gridSettings": {
              "formatters": [
                {
                  "columnMatch": "RecommendationName",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "success",
                        "text": "{0}{1}"
                      }
                    ]
                  }
                },
                {
                  "columnMatch": "Total",
                  "formatter": 5,
                  "formatOptions": {
                    "compositeBarSettings": {
                      "labelText": "[[[\"Passed\"]/[\"Total\"]]",
                      "columnSettings": [
                        {
                          "columnName": "Passed",
                          "color": "green"
                        },
                        {
                          "columnName": "Failed",
                          "color": "redBright"
                        }
                      ]
                    }
                  },
                  "tooltipFormat": {
                    "tooltip": "Passed/Total"
                  }
                },
                {
                  "columnMatch": "PassedControls",
                  "formatter": 5,
                  "numberFormat": {
                    "unit": 1,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true
                    }
                  }
                },
                {
                  "columnMatch": "overallstate",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": "contains",
                        "thresholdValue": "Passed",
                        "representation": "success",
                        "text": "{0}{1}"
                      },
                      {
                        "operator": "contains",
                        "thresholdValue": "Failed",
                        "representation": "failed",
                        "text": "{0}{1}"
                      },
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "success",
                        "text": "{0}{1}"
                      }
                    ]
                  }
                },
                {
                  "columnMatch": "Remediate",
                  "formatter": 7,
                  "formatOptions": {
                    "linkTarget": "OpenBlade",
                    "linkLabel": "view recommendation",
                    "bladeOpenContext": {
                      "bladeName": "RecommendationsBlade",
                      "extensionName": "Microsoft_Azure_Security",
                      "bladeParameters": [
                        {
                          "name": "assessmentKey",
                          "source": "column",
                          "value": "assessmentKey"
                        }
                      ]
                    }
                  }
                },
                {
                  "columnMatch": "Passed",
                  "formatter": 5
                },
                {
                  "columnMatch": "Failed",
                  "formatter": 5
                },
                {
                  "columnMatch": "assessmentKey",
                  "formatter": 5
                }
              ],
              "labelSettings": [
                {
                  "columnId": "overallstate",
                  "label": "ComplianceState"
                }
              ]
            }
          },
          "conditionalVisibility": {
            "parameterName": "wbtab",
            "comparison": "isEqualTo",
            "value": "update"
          },
          "name": "incidentnotification"
        },
        {
          "type": 3,
          "content": {
            "version": "KqlItem/1.0",
            "query": "securityresources\r\n    | where type == \"microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols/regulatorycomplianceassessments\"\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | where complianceStandardId ==  \"Azure Security Benchmark\"\r\n    | join kind = leftouter(\r\n    securityresources\r\n    | where type == \"microsoft.security/assessments\") on subscriptionId, name\r\n    | extend complianceState = properties.state\r\n    | extend resourceSource = tolower(tostring(properties1.resourceDetails.Source))\r\n    | extend recommendationId = id1\r\n    | extend resourceId = trim(' ', tolower(tostring(case(resourceSource =~ 'azure', properties1.resourceDetails.Id,\r\n                                                        resourceSource =~ 'gcp', properties1.resourceDetails.GcpResourceId,\r\n                                                        resourceSource =~ 'aws', properties1.resourceDetails.AwsResourceId,\r\n                                                        extract('^(.+)/providers/Microsoft.Security/assessments/.+$',1,recommendationId)))))\r\n    | extend regexResourceId = extract_all(@\"/providers/[^/]+(?:/([^/]+)/[^/]+(?:/[^/]+/[^/]+)?)?/([^/]+)/([^/]+)$\", resourceId)[0]\r\n    | extend resourceType = iff(regexResourceId[1] != \"\", regexResourceId[1], iff(regexResourceId[0] != \"\", regexResourceId[0], \"subscriptions\"))\r\n    | extend resourceName = regexResourceId[2]\r\n    | extend recommendationName = name\r\n    | extend RecommendationName = properties1.displayName\r\n    | extend description = properties1.metadata.description\r\n    | extend remediationSteps = properties1.metadata.remediationDescription\r\n    | extend severity = properties1.metadata.severity\r\n    | extend state = properties1.status.code\r\n    | extend notApplicableReason = properties1.status.cause\r\n    | extend RecommendationLink = properties1.links.azurePortal\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | extend complianceControlId = extract(@\"/regulatoryComplianceControls/([^/]*)\", 1, id)\r\n    | join kind = leftouter (securityresources\r\n    | where type == \"microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols\"\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | where complianceStandardId == \"Azure Security Benchmark\"\r\n    | extend  controlName = tostring(properties.description)\r\n    | project controlId = name, controlName\r\n    | distinct  *) on $right.controlId == $left.complianceControlId\r\n    | extend RecommendationName = tostring(properties.description)\r\n    | summarize Failed = countif(state == \"Unhealthy\"), Passed = countif(state == \"Healthy\" or complianceState == \"Passed\"), Total = countif(state == \"Unhealthy\" or state == \"Healthy\" or complianceState == \"Passed\") by RecommendationName, ControlID = controlId\r\n    | extend PassedControls = (Passed/todouble(Total))*100\r\n| join kind = leftouter (securityresources\r\n    | where type == \"microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols/regulatorycomplianceassessments\"\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | where complianceStandardId ==  \"Azure Security Benchmark\"\r\n    | extend RecommendationName = tostring(properties.description)\r\n    | extend RecommendationLink = tostring(properties.assessmentDetailsLink)\r\n    | project RecommendationName, RecommendationLink, name) on RecommendationName \r\n| extend Remediate=RecommendationLink\r\n| where ControlID in ( \"NS.2\")\r\n| parse Remediate with * '/#blade/Microsoft_Azure_Security/RecommendationsBlade/assessmentKey/' assessmentKey '/' *\r\n| extend overallstate= iff(PassedControls==100, \"Passed\", \"Failed\")\r\n| distinct RecommendationName, Total,  PassedControls, overallstate,Remediate,Passed, Failed, assessmentKey\r\n| sort by Total, Passed desc\r\n| limit 250",
            "size": 1,
            "title": "Services used by this workload, which should not be accessible from public IP addresses, are protected with network restrictions / IP firewall rules. Service Endpoints or Private Links are used for accessing Azure PaaS services.",
            "showExportToExcel": true,
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "crossComponentResources": [
              "{SubscriptionName}"
            ],
            "gridSettings": {
              "formatters": [
                {
                  "columnMatch": "RecommendationName",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "success",
                        "text": "{0}{1}"
                      }
                    ]
                  }
                },
                {
                  "columnMatch": "Total",
                  "formatter": 5,
                  "formatOptions": {
                    "compositeBarSettings": {
                      "labelText": "[[[\"Passed\"]/[\"Total\"]]",
                      "columnSettings": [
                        {
                          "columnName": "Passed",
                          "color": "green"
                        },
                        {
                          "columnName": "Failed",
                          "color": "redBright"
                        }
                      ]
                    }
                  },
                  "tooltipFormat": {
                    "tooltip": "Passed/Total"
                  }
                },
                {
                  "columnMatch": "PassedControls",
                  "formatter": 5,
                  "numberFormat": {
                    "unit": 1,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true
                    }
                  }
                },
                {
                  "columnMatch": "overallstate",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": "contains",
                        "thresholdValue": "Passed",
                        "representation": "success",
                        "text": "{0}{1}"
                      },
                      {
                        "operator": "contains",
                        "thresholdValue": "Failed",
                        "representation": "failed",
                        "text": "{0}{1}"
                      },
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "success",
                        "text": "{0}{1}"
                      }
                    ]
                  }
                },
                {
                  "columnMatch": "Remediate",
                  "formatter": 7,
                  "formatOptions": {
                    "linkTarget": "OpenBlade",
                    "linkLabel": "view recommendation",
                    "bladeOpenContext": {
                      "bladeName": "RecommendationsBlade",
                      "extensionName": "Microsoft_Azure_Security",
                      "bladeParameters": [
                        {
                          "name": "assessmentKey",
                          "source": "column",
                          "value": "assessmentKey"
                        }
                      ]
                    }
                  }
                },
                {
                  "columnMatch": "Passed",
                  "formatter": 5
                },
                {
                  "columnMatch": "Failed",
                  "formatter": 5
                },
                {
                  "columnMatch": "assessmentKey",
                  "formatter": 5
                }
              ],
              "labelSettings": [
                {
                  "columnId": "overallstate",
                  "label": "ComplianceState"
                }
              ]
            }
          },
          "conditionalVisibility": {
            "parameterName": "wbtab",
            "comparison": "isEqualTo",
            "value": "network"
          },
          "name": "publicaccess"
        },
        {
          "type": 3,
          "content": {
            "version": "KqlItem/1.0",
            "query": "securityresources\r\n    | where type == \"microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols/regulatorycomplianceassessments\"\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | where complianceStandardId ==  \"Azure Security Benchmark\"\r\n    | join kind = leftouter(\r\n    securityresources\r\n    | where type == \"microsoft.security/assessments\") on subscriptionId, name\r\n    | extend complianceState = properties.state\r\n    | extend resourceSource = tolower(tostring(properties1.resourceDetails.Source))\r\n    | extend recommendationId = id1\r\n    | extend resourceId = trim(' ', tolower(tostring(case(resourceSource =~ 'azure', properties1.resourceDetails.Id,\r\n                                                        resourceSource =~ 'gcp', properties1.resourceDetails.GcpResourceId,\r\n                                                        resourceSource =~ 'aws', properties1.resourceDetails.AwsResourceId,\r\n                                                        extract('^(.+)/providers/Microsoft.Security/assessments/.+$',1,recommendationId)))))\r\n    | extend regexResourceId = extract_all(@\"/providers/[^/]+(?:/([^/]+)/[^/]+(?:/[^/]+/[^/]+)?)?/([^/]+)/([^/]+)$\", resourceId)[0]\r\n    | extend resourceType = iff(regexResourceId[1] != \"\", regexResourceId[1], iff(regexResourceId[0] != \"\", regexResourceId[0], \"subscriptions\"))\r\n    | extend resourceName = regexResourceId[2]\r\n    | extend recommendationName = name\r\n    | extend RecommendationName = properties1.displayName\r\n    | extend description = properties1.metadata.description\r\n    | extend remediationSteps = properties1.metadata.remediationDescription\r\n    | extend severity = properties1.metadata.severity\r\n    | extend state = properties1.status.code\r\n    | extend notApplicableReason = properties1.status.cause\r\n    | extend RecommendationLink = properties1.links.azurePortal\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | extend complianceControlId = extract(@\"/regulatoryComplianceControls/([^/]*)\", 1, id)\r\n    | join kind = leftouter (securityresources\r\n    | where type == \"microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols\"\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | where complianceStandardId == \"Azure Security Benchmark\"\r\n    | extend  controlName = tostring(properties.description)\r\n    | project controlId = name, controlName\r\n    | distinct  *) on $right.controlId == $left.complianceControlId\r\n    | extend RecommendationName = tostring(properties.description)\r\n    | summarize Failed = countif(state == \"Unhealthy\"), Passed = countif(state == \"Healthy\" or complianceState == \"Passed\"), Total = countif(state == \"Unhealthy\" or state == \"Healthy\" or complianceState == \"Passed\") by RecommendationName, ControlID = controlId\r\n    | extend PassedControls = (Passed/todouble(Total))*100\r\n| join kind = leftouter (securityresources\r\n    | where type == \"microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols/regulatorycomplianceassessments\"\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | where complianceStandardId ==  \"Azure Security Benchmark\"\r\n    | extend RecommendationName = tostring(properties.description)\r\n    | extend RecommendationLink = tostring(properties.assessmentDetailsLink)\r\n    | project RecommendationName, RecommendationLink, name) on RecommendationName \r\n| extend Remediate=RecommendationLink\r\n| where ControlID in ( \"NS.6\")\r\n| parse Remediate with * '/#blade/Microsoft_Azure_Security/RecommendationsBlade/assessmentKey/' assessmentKey '/' *\r\n| extend overallstate= iff(PassedControls==100, \"Passed\", \"Failed\")\r\n| distinct RecommendationName, Total,  PassedControls, overallstate,Remediate,Passed, Failed, assessmentKey\r\n| sort by Total, Passed desc\r\n| limit 250",
            "size": 1,
            "title": "Azure Firewall or any 3rd party next generation firewall is used for this workload to control outgoing traffic of Azure PaaS services (data exfiltration protection) where Private Link is not available.",
            "showExportToExcel": true,
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "crossComponentResources": [
              "{SubscriptionName}"
            ],
            "gridSettings": {
              "formatters": [
                {
                  "columnMatch": "RecommendationName",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "success",
                        "text": "{0}{1}"
                      }
                    ]
                  }
                },
                {
                  "columnMatch": "Total",
                  "formatter": 5,
                  "formatOptions": {
                    "compositeBarSettings": {
                      "labelText": "[[[\"Passed\"]/[\"Total\"]]",
                      "columnSettings": [
                        {
                          "columnName": "Passed",
                          "color": "green"
                        },
                        {
                          "columnName": "Failed",
                          "color": "redBright"
                        }
                      ]
                    }
                  },
                  "tooltipFormat": {
                    "tooltip": "Passed/Total"
                  }
                },
                {
                  "columnMatch": "PassedControls",
                  "formatter": 5,
                  "numberFormat": {
                    "unit": 1,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true
                    }
                  }
                },
                {
                  "columnMatch": "overallstate",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": "contains",
                        "thresholdValue": "Passed",
                        "representation": "success",
                        "text": "{0}{1}"
                      },
                      {
                        "operator": "contains",
                        "thresholdValue": "Failed",
                        "representation": "failed",
                        "text": "{0}{1}"
                      },
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "success",
                        "text": "{0}{1}"
                      }
                    ]
                  }
                },
                {
                  "columnMatch": "Remediate",
                  "formatter": 7,
                  "formatOptions": {
                    "linkTarget": "OpenBlade",
                    "linkLabel": "view recommendation",
                    "bladeOpenContext": {
                      "bladeName": "RecommendationsBlade",
                      "extensionName": "Microsoft_Azure_Security",
                      "bladeParameters": [
                        {
                          "name": "assessmentKey",
                          "source": "column",
                          "value": "assessmentKey"
                        }
                      ]
                    }
                  }
                },
                {
                  "columnMatch": "Passed",
                  "formatter": 5
                },
                {
                  "columnMatch": "Failed",
                  "formatter": 5
                },
                {
                  "columnMatch": "assessmentKey",
                  "formatter": 5
                }
              ],
              "labelSettings": [
                {
                  "columnId": "overallstate",
                  "label": "ComplianceState"
                }
              ]
            }
          },
          "conditionalVisibility": {
            "parameterName": "wbtab",
            "comparison": "isEqualTo",
            "value": "network"
          },
          "name": "firewall"
        },
        {
          "type": 3,
          "content": {
            "version": "KqlItem/1.0",
            "query": "resources\r\n| where type in ( \"microsoft.network/applicationgatewaywebapplicationfirewallpolicies\",\"microsoft.network/frontdoorwebapplicationfirewallpolicies\",  \"microsoft.network/azurefirewalls\") \r\n| project name, Type= strcat(split(['type'], '/') [1]), resourceGroup, subscriptionId",
            "size": 1,
            "showAnalytics": true,
            "title": "List of deployed  Azure Firewalls/WAF ",
            "showExportToExcel": true,
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "crossComponentResources": [
              "{SubscriptionName}"
            ]
          },
          "conditionalVisibility": {
            "parameterName": "wbtab",
            "comparison": "isEqualTo",
            "value": "network"
          },
          "name": "listoffirewall"
        },
        {
          "type": 3,
          "content": {
            "version": "KqlItem/1.0",
            "query": "securityresources\r\n    | where type == \"microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols/regulatorycomplianceassessments\"\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | where complianceStandardId ==  \"Azure Security Benchmark\"\r\n    | join kind = leftouter(\r\n    securityresources\r\n    | where type == \"microsoft.security/assessments\") on subscriptionId, name\r\n    | extend complianceState = properties.state\r\n    | extend resourceSource = tolower(tostring(properties1.resourceDetails.Source))\r\n    | extend recommendationId = id1\r\n    | extend resourceId = trim(' ', tolower(tostring(case(resourceSource =~ 'azure', properties1.resourceDetails.Id,\r\n                                                        resourceSource =~ 'gcp', properties1.resourceDetails.GcpResourceId,\r\n                                                        resourceSource =~ 'aws', properties1.resourceDetails.AwsResourceId,\r\n                                                        extract('^(.+)/providers/Microsoft.Security/assessments/.+$',1,recommendationId)))))\r\n    | extend regexResourceId = extract_all(@\"/providers/[^/]+(?:/([^/]+)/[^/]+(?:/[^/]+/[^/]+)?)?/([^/]+)/([^/]+)$\", resourceId)[0]\r\n    | extend resourceType = iff(regexResourceId[1] != \"\", regexResourceId[1], iff(regexResourceId[0] != \"\", regexResourceId[0], \"subscriptions\"))\r\n    | extend resourceName = regexResourceId[2]\r\n    | extend recommendationName = name\r\n    | extend RecommendationName = properties1.displayName\r\n    | extend description = properties1.metadata.description\r\n    | extend remediationSteps = properties1.metadata.remediationDescription\r\n    | extend severity = properties1.metadata.severity\r\n    | extend state = properties1.status.code\r\n    | extend notApplicableReason = properties1.status.cause\r\n    | extend RecommendationLink = properties1.links.azurePortal\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | extend complianceControlId = extract(@\"/regulatoryComplianceControls/([^/]*)\", 1, id)\r\n    | join kind = leftouter (securityresources\r\n    | where type == \"microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols\"\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | where complianceStandardId == \"Azure Security Benchmark\"\r\n    | extend  controlName = tostring(properties.description)\r\n    | project controlId = name, controlName\r\n    | distinct  *) on $right.controlId == $left.complianceControlId\r\n    | extend RecommendationName = tostring(properties.description)\r\n    | summarize Failed = countif(state == \"Unhealthy\"), Passed = countif(state == \"Healthy\" or complianceState == \"Passed\"), Total = countif(state == \"Unhealthy\" or state == \"Healthy\" or complianceState == \"Passed\") by RecommendationName, ControlID = controlId\r\n    | extend PassedControls = (Passed/todouble(Total))*100\r\n| join kind = leftouter (securityresources\r\n    | where type == \"microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols/regulatorycomplianceassessments\"\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | where complianceStandardId ==  \"Azure Security Benchmark\"\r\n    | extend RecommendationName = tostring(properties.description)\r\n    | extend RecommendationLink = tostring(properties.assessmentDetailsLink)\r\n    | project RecommendationName, RecommendationLink, name) on RecommendationName \r\n| extend Remediate=RecommendationLink\r\n| where ControlID in ( \"NS.1\")\r\n| parse Remediate with * '/#blade/Microsoft_Azure_Security/RecommendationsBlade/assessmentKey/' assessmentKey '/' *\r\n| extend overallstate= iff(PassedControls==100, \"Passed\", \"Failed\")\r\n| distinct RecommendationName, Total,  PassedControls, overallstate,Remediate,Passed, Failed, assessmentKey\r\n| sort by Total, Passed desc\r\n| limit 250",
            "size": 1,
            "title": "Network security groups (NSG) are used to isolate and protect traffic within the workloads VNet.",
            "showExportToExcel": true,
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "crossComponentResources": [
              "{SubscriptionName}"
            ],
            "gridSettings": {
              "formatters": [
                {
                  "columnMatch": "RecommendationName",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "success",
                        "text": "{0}{1}"
                      }
                    ]
                  }
                },
                {
                  "columnMatch": "Total",
                  "formatter": 5,
                  "formatOptions": {
                    "compositeBarSettings": {
                      "labelText": "[[[\"Passed\"]/[\"Total\"]]",
                      "columnSettings": [
                        {
                          "columnName": "Passed",
                          "color": "green"
                        },
                        {
                          "columnName": "Failed",
                          "color": "redBright"
                        }
                      ]
                    }
                  },
                  "tooltipFormat": {
                    "tooltip": "Passed/Total"
                  }
                },
                {
                  "columnMatch": "PassedControls",
                  "formatter": 5,
                  "numberFormat": {
                    "unit": 1,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true
                    }
                  }
                },
                {
                  "columnMatch": "overallstate",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": "contains",
                        "thresholdValue": "Passed",
                        "representation": "success",
                        "text": "{0}{1}"
                      },
                      {
                        "operator": "contains",
                        "thresholdValue": "Failed",
                        "representation": "failed",
                        "text": "{0}{1}"
                      },
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "success",
                        "text": "{0}{1}"
                      }
                    ]
                  }
                },
                {
                  "columnMatch": "Remediate",
                  "formatter": 7,
                  "formatOptions": {
                    "linkTarget": "OpenBlade",
                    "linkLabel": "view recommendation",
                    "bladeOpenContext": {
                      "bladeName": "RecommendationsBlade",
                      "extensionName": "Microsoft_Azure_Security",
                      "bladeParameters": [
                        {
                          "name": "assessmentKey",
                          "source": "column",
                          "value": "assessmentKey"
                        }
                      ]
                    }
                  }
                },
                {
                  "columnMatch": "Passed",
                  "formatter": 5
                },
                {
                  "columnMatch": "Failed",
                  "formatter": 5
                },
                {
                  "columnMatch": "assessmentKey",
                  "formatter": 5
                }
              ],
              "labelSettings": [
                {
                  "columnId": "overallstate",
                  "label": "ComplianceState"
                }
              ]
            }
          },
          "conditionalVisibility": {
            "parameterName": "wbtab",
            "comparison": "isEqualTo",
            "value": "network"
          },
          "name": "NSG"
        },
        {
          "type": 3,
          "content": {
            "version": "KqlItem/1.0",
            "query": "Resources\r\n| where type contains 'microsoft.network/Networksecuritygroups'\r\n| project name, Type= strcat(split(['type'], '/') [1]), resourceGroup, subscriptionId",
            "size": 1,
            "showAnalytics": true,
            "title": "List of deployed  Network Security Groups ",
            "showExportToExcel": true,
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "crossComponentResources": [
              "{SubscriptionName}"
            ]
          },
          "conditionalVisibility": {
            "parameterName": "wbtab",
            "comparison": "isEqualTo",
            "value": "network"
          },
          "name": "listofNSG "
        },
        {
          "type": 3,
          "content": {
            "version": "KqlItem/1.0",
            "query": "securityresources\r\n    | where type == \"microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols/regulatorycomplianceassessments\"\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | where complianceStandardId ==  \"Azure Security Benchmark\"\r\n    | join kind = leftouter(\r\n    securityresources\r\n    | where type == \"microsoft.security/assessments\") on subscriptionId, name\r\n    | extend complianceState = properties.state\r\n    | extend resourceSource = tolower(tostring(properties1.resourceDetails.Source))\r\n    | extend recommendationId = id1\r\n    | extend resourceId = trim(' ', tolower(tostring(case(resourceSource =~ 'azure', properties1.resourceDetails.Id,\r\n                                                        resourceSource =~ 'gcp', properties1.resourceDetails.GcpResourceId,\r\n                                                        resourceSource =~ 'aws', properties1.resourceDetails.AwsResourceId,\r\n                                                        extract('^(.+)/providers/Microsoft.Security/assessments/.+$',1,recommendationId)))))\r\n    | extend regexResourceId = extract_all(@\"/providers/[^/]+(?:/([^/]+)/[^/]+(?:/[^/]+/[^/]+)?)?/([^/]+)/([^/]+)$\", resourceId)[0]\r\n    | extend resourceType = iff(regexResourceId[1] != \"\", regexResourceId[1], iff(regexResourceId[0] != \"\", regexResourceId[0], \"subscriptions\"))\r\n    | extend resourceName = regexResourceId[2]\r\n    | extend recommendationName = name\r\n    | extend RecommendationName = properties1.displayName\r\n    | extend description = properties1.metadata.description\r\n    | extend remediationSteps = properties1.metadata.remediationDescription\r\n    | extend severity = properties1.metadata.severity\r\n    | extend state = properties1.status.code\r\n    | extend notApplicableReason = properties1.status.cause\r\n    | extend RecommendationLink = properties1.links.azurePortal\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | extend complianceControlId = extract(@\"/regulatoryComplianceControls/([^/]*)\", 1, id)\r\n    | join kind = leftouter (securityresources\r\n    | where type == \"microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols\"\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | where complianceStandardId == \"Azure Security Benchmark\"\r\n    | extend  controlName = tostring(properties.description)\r\n    | project controlId = name, controlName\r\n    | distinct  *) on $right.controlId == $left.complianceControlId\r\n    | extend RecommendationName = tostring(properties.description)\r\n    | summarize Failed = countif(state == \"Unhealthy\"), Passed = countif(state == \"Healthy\" or complianceState == \"Passed\"), Total = countif(state == \"Unhealthy\" or state == \"Healthy\" or complianceState == \"Passed\") by RecommendationName, ControlID = controlId\r\n    | extend PassedControls = (Passed/todouble(Total))*100\r\n| join kind = leftouter (securityresources\r\n    | where type == \"microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols/regulatorycomplianceassessments\"\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | where complianceStandardId ==  \"Azure Security Benchmark\"\r\n    | extend RecommendationName = tostring(properties.description)\r\n    | extend RecommendationLink = tostring(properties.assessmentDetailsLink)\r\n    | project RecommendationName, RecommendationLink, name) on RecommendationName \r\n| extend Remediate=RecommendationLink\r\n| where ControlID in ( \"NS.3\")\r\n| parse Remediate with * '/#blade/Microsoft_Azure_Security/RecommendationsBlade/assessmentKey/' assessmentKey '/' *\r\n| extend overallstate= iff(PassedControls==100, \"Passed\", \"Failed\")\r\n| distinct RecommendationName, Total,  PassedControls, overallstate,Remediate,Passed, Failed, assessmentKey\r\n| sort by Total, Passed desc\r\n| limit 250",
            "size": 1,
            "title": "Workload virtual machines running on premises or in the cloud don't have direct internet connectivity for users that may perform interactive logins, or by applications running on virtual machines.",
            "showExportToExcel": true,
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "crossComponentResources": [
              "{SubscriptionName}"
            ],
            "gridSettings": {
              "formatters": [
                {
                  "columnMatch": "RecommendationName",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "success",
                        "text": "{0}{1}"
                      }
                    ]
                  }
                },
                {
                  "columnMatch": "Total",
                  "formatter": 5,
                  "formatOptions": {
                    "compositeBarSettings": {
                      "labelText": "[[[\"Passed\"]/[\"Total\"]]",
                      "columnSettings": [
                        {
                          "columnName": "Passed",
                          "color": "green"
                        },
                        {
                          "columnName": "Failed",
                          "color": "redBright"
                        }
                      ]
                    }
                  },
                  "tooltipFormat": {
                    "tooltip": "Passed/Total"
                  }
                },
                {
                  "columnMatch": "PassedControls",
                  "formatter": 5,
                  "numberFormat": {
                    "unit": 1,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true
                    }
                  }
                },
                {
                  "columnMatch": "overallstate",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": "contains",
                        "thresholdValue": "Passed",
                        "representation": "success",
                        "text": "{0}{1}"
                      },
                      {
                        "operator": "contains",
                        "thresholdValue": "Failed",
                        "representation": "failed",
                        "text": "{0}{1}"
                      },
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "success",
                        "text": "{0}{1}"
                      }
                    ]
                  }
                },
                {
                  "columnMatch": "Remediate",
                  "formatter": 7,
                  "formatOptions": {
                    "linkTarget": "OpenBlade",
                    "linkLabel": "view recommendation",
                    "bladeOpenContext": {
                      "bladeName": "RecommendationsBlade",
                      "extensionName": "Microsoft_Azure_Security",
                      "bladeParameters": [
                        {
                          "name": "assessmentKey",
                          "source": "column",
                          "value": "assessmentKey"
                        }
                      ]
                    }
                  }
                },
                {
                  "columnMatch": "Passed",
                  "formatter": 5
                },
                {
                  "columnMatch": "Failed",
                  "formatter": 5
                },
                {
                  "columnMatch": "assessmentKey",
                  "formatter": 5
                }
              ],
              "labelSettings": [
                {
                  "columnId": "overallstate",
                  "label": "ComplianceState"
                }
              ]
            }
          },
          "conditionalVisibility": {
            "parameterName": "wbtab",
            "comparison": "isEqualTo",
            "value": "network"
          },
          "name": "rdpaccess"
        },
        {
          "type": 3,
          "content": {
            "version": "KqlItem/1.0",
            "query": "securityresources\r\n    | where type == \"microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols/regulatorycomplianceassessments\"\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | where complianceStandardId ==  \"Azure Security Benchmark\"\r\n    | join kind = leftouter(\r\n    securityresources\r\n    | where type == \"microsoft.security/assessments\") on subscriptionId, name\r\n    | extend complianceState = properties.state\r\n    | extend resourceSource = tolower(tostring(properties1.resourceDetails.Source))\r\n    | extend recommendationId = id1\r\n    | extend resourceId = trim(' ', tolower(tostring(case(resourceSource =~ 'azure', properties1.resourceDetails.Id,\r\n                                                        resourceSource =~ 'gcp', properties1.resourceDetails.GcpResourceId,\r\n                                                        resourceSource =~ 'aws', properties1.resourceDetails.AwsResourceId,\r\n                                                        extract('^(.+)/providers/Microsoft.Security/assessments/.+$',1,recommendationId)))))\r\n    | extend regexResourceId = extract_all(@\"/providers/[^/]+(?:/([^/]+)/[^/]+(?:/[^/]+/[^/]+)?)?/([^/]+)/([^/]+)$\", resourceId)[0]\r\n    | extend resourceType = iff(regexResourceId[1] != \"\", regexResourceId[1], iff(regexResourceId[0] != \"\", regexResourceId[0], \"subscriptions\"))\r\n    | extend resourceName = regexResourceId[2]\r\n    | extend recommendationName = name\r\n    | extend RecommendationName = properties1.displayName\r\n    | extend description = properties1.metadata.description\r\n    | extend remediationSteps = properties1.metadata.remediationDescription\r\n    | extend severity = properties1.metadata.severity\r\n    | extend state = properties1.status.code\r\n    | extend notApplicableReason = properties1.status.cause\r\n    | extend RecommendationLink = properties1.links.azurePortal\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | extend complianceControlId = extract(@\"/regulatoryComplianceControls/([^/]*)\", 1, id)\r\n    | join kind = leftouter (securityresources\r\n    | where type == \"microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols\"\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | where complianceStandardId == \"Azure Security Benchmark\"\r\n    | extend  controlName = tostring(properties.description)\r\n    | project controlId = name, controlName\r\n    | distinct  *) on $right.controlId == $left.complianceControlId\r\n    | extend RecommendationName = tostring(properties.description)\r\n    | summarize Failed = countif(state == \"Unhealthy\"), Passed = countif(state == \"Healthy\" or complianceState == \"Passed\"), Total = countif(state == \"Unhealthy\" or state == \"Healthy\" or complianceState == \"Passed\") by RecommendationName, ControlID = controlId\r\n    | extend PassedControls = (Passed/todouble(Total))*100\r\n| join kind = leftouter (securityresources\r\n    | where type == \"microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols/regulatorycomplianceassessments\"\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | where complianceStandardId ==  \"Azure Security Benchmark\"\r\n    | extend RecommendationName = tostring(properties.description)\r\n    | extend RecommendationLink = tostring(properties.assessmentDetailsLink)\r\n    | project RecommendationName, RecommendationLink, name) on RecommendationName \r\n| extend Remediate=RecommendationLink\r\n| where ControlID in ( \"NS.5\")\r\n| parse Remediate with * '/#blade/Microsoft_Azure_Security/RecommendationsBlade/assessmentKey/' assessmentKey '/' *\r\n| extend overallstate= iff(PassedControls==100, \"Passed\", \"Failed\")\r\n| distinct RecommendationName, Total,  PassedControls, overallstate,Remediate,Passed, Failed, assessmentKey\r\n| sort by Total, Passed desc\r\n| limit 250",
            "size": 1,
            "title": "There's a capability and plans in place to mitigate DDoS attacks for this workload.",
            "showExportToExcel": true,
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "crossComponentResources": [
              "{SubscriptionName}"
            ],
            "gridSettings": {
              "formatters": [
                {
                  "columnMatch": "RecommendationName",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "success",
                        "text": "{0}{1}"
                      }
                    ]
                  }
                },
                {
                  "columnMatch": "Total",
                  "formatter": 5,
                  "formatOptions": {
                    "compositeBarSettings": {
                      "labelText": "[[[\"Passed\"]/[\"Total\"]]",
                      "columnSettings": [
                        {
                          "columnName": "Passed",
                          "color": "green"
                        },
                        {
                          "columnName": "Failed",
                          "color": "redBright"
                        }
                      ]
                    }
                  },
                  "tooltipFormat": {
                    "tooltip": "Passed/Total"
                  }
                },
                {
                  "columnMatch": "PassedControls",
                  "formatter": 5,
                  "numberFormat": {
                    "unit": 1,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true
                    }
                  }
                },
                {
                  "columnMatch": "overallstate",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": "contains",
                        "thresholdValue": "Passed",
                        "representation": "success",
                        "text": "{0}{1}"
                      },
                      {
                        "operator": "contains",
                        "thresholdValue": "Failed",
                        "representation": "failed",
                        "text": "{0}{1}"
                      },
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "success",
                        "text": "{0}{1}"
                      }
                    ]
                  }
                },
                {
                  "columnMatch": "Remediate",
                  "formatter": 7,
                  "formatOptions": {
                    "linkTarget": "OpenBlade",
                    "linkLabel": "view recommendation",
                    "bladeOpenContext": {
                      "bladeName": "RecommendationsBlade",
                      "extensionName": "Microsoft_Azure_Security",
                      "bladeParameters": [
                        {
                          "name": "assessmentKey",
                          "source": "column",
                          "value": "assessmentKey"
                        }
                      ]
                    }
                  }
                },
                {
                  "columnMatch": "Passed",
                  "formatter": 5
                },
                {
                  "columnMatch": "Failed",
                  "formatter": 5
                },
                {
                  "columnMatch": "assessmentKey",
                  "formatter": 5
                }
              ],
              "labelSettings": [
                {
                  "columnId": "overallstate",
                  "label": "ComplianceState"
                }
              ]
            }
          },
          "conditionalVisibility": {
            "parameterName": "wbtab",
            "comparison": "isEqualTo",
            "value": "network"
          },
          "name": "ddos"
        },
        {
          "type": 3,
          "content": {
            "version": "KqlItem/1.0",
            "query": "securityresources\r\n    | where type == \"microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols/regulatorycomplianceassessments\"\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | where complianceStandardId ==  \"Azure Security Benchmark\"\r\n    | join kind = leftouter(\r\n    securityresources\r\n    | where type == \"microsoft.security/assessments\") on subscriptionId, name\r\n    | extend complianceState = properties.state\r\n    | extend resourceSource = tolower(tostring(properties1.resourceDetails.Source))\r\n    | extend recommendationId = id1\r\n    | extend resourceId = trim(' ', tolower(tostring(case(resourceSource =~ 'azure', properties1.resourceDetails.Id,\r\n                                                        resourceSource =~ 'gcp', properties1.resourceDetails.GcpResourceId,\r\n                                                        resourceSource =~ 'aws', properties1.resourceDetails.AwsResourceId,\r\n                                                        extract('^(.+)/providers/Microsoft.Security/assessments/.+$',1,recommendationId)))))\r\n    | extend regexResourceId = extract_all(@\"/providers/[^/]+(?:/([^/]+)/[^/]+(?:/[^/]+/[^/]+)?)?/([^/]+)/([^/]+)$\", resourceId)[0]\r\n    | extend resourceType = iff(regexResourceId[1] != \"\", regexResourceId[1], iff(regexResourceId[0] != \"\", regexResourceId[0], \"subscriptions\"))\r\n    | extend resourceName = regexResourceId[2]\r\n    | extend recommendationName = name\r\n    | extend RecommendationName = properties1.displayName\r\n    | extend description = properties1.metadata.description\r\n    | extend remediationSteps = properties1.metadata.remediationDescription\r\n    | extend severity = properties1.metadata.severity\r\n    | extend state = properties1.status.code\r\n    | extend notApplicableReason = properties1.status.cause\r\n    | extend RecommendationLink = properties1.links.azurePortal\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | extend complianceControlId = extract(@\"/regulatoryComplianceControls/([^/]*)\", 1, id)\r\n    | join kind = leftouter (securityresources\r\n    | where type == \"microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols\"\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | where complianceStandardId == \"Azure Security Benchmark\"\r\n    | extend  controlName = tostring(properties.description)\r\n    | project controlId = name, controlName\r\n    | distinct  *) on $right.controlId == $left.complianceControlId\r\n    | extend RecommendationName = tostring(properties.description)\r\n    | summarize Failed = countif(state == \"Unhealthy\"), Passed = countif(state == \"Healthy\" or complianceState == \"Passed\"), Total = countif(state == \"Unhealthy\" or state == \"Healthy\" or complianceState == \"Passed\") by RecommendationName, ControlID = controlId\r\n    | extend PassedControls = (Passed/todouble(Total))*100\r\n| join kind = leftouter (securityresources\r\n    | where type == \"microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols/regulatorycomplianceassessments\"\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | where complianceStandardId ==  \"Azure Security Benchmark\"\r\n    | extend RecommendationName = tostring(properties.description)\r\n    | extend RecommendationLink = tostring(properties.assessmentDetailsLink)\r\n    | project RecommendationName, RecommendationLink, name) on RecommendationName \r\n| extend Remediate=RecommendationLink\r\n| where ControlID in ( \"DP.3\")\r\n| parse Remediate with * '/#blade/Microsoft_Azure_Security/RecommendationsBlade/assessmentKey/' assessmentKey '/' *\r\n| extend overallstate= iff(PassedControls==100, \"Passed\", \"Failed\")\r\n| distinct RecommendationName, Total,  PassedControls, overallstate,Remediate,Passed, Failed, assessmentKey\r\n| sort by Total, Passed desc\r\n| limit 250",
            "size": 1,
            "title": "Data in transit is encrypted.The workload communicates over encrypted (TLS / HTTPS) network channels only.",
            "showExportToExcel": true,
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "crossComponentResources": [
              "{SubscriptionName}"
            ],
            "gridSettings": {
              "formatters": [
                {
                  "columnMatch": "RecommendationName",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "success",
                        "text": "{0}{1}"
                      }
                    ]
                  }
                },
                {
                  "columnMatch": "Total",
                  "formatter": 5,
                  "formatOptions": {
                    "compositeBarSettings": {
                      "labelText": "[[[\"Passed\"]/[\"Total\"]]",
                      "columnSettings": [
                        {
                          "columnName": "Passed",
                          "color": "green"
                        },
                        {
                          "columnName": "Failed",
                          "color": "redBright"
                        }
                      ]
                    }
                  },
                  "tooltipFormat": {
                    "tooltip": "Passed/Total"
                  }
                },
                {
                  "columnMatch": "PassedControls",
                  "formatter": 5,
                  "numberFormat": {
                    "unit": 1,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true
                    }
                  }
                },
                {
                  "columnMatch": "overallstate",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": "contains",
                        "thresholdValue": "Passed",
                        "representation": "success",
                        "text": "{0}{1}"
                      },
                      {
                        "operator": "contains",
                        "thresholdValue": "Failed",
                        "representation": "failed",
                        "text": "{0}{1}"
                      },
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "success",
                        "text": "{0}{1}"
                      }
                    ]
                  }
                },
                {
                  "columnMatch": "Remediate",
                  "formatter": 7,
                  "formatOptions": {
                    "linkTarget": "OpenBlade",
                    "linkLabel": "view recommendation",
                    "bladeOpenContext": {
                      "bladeName": "RecommendationsBlade",
                      "extensionName": "Microsoft_Azure_Security",
                      "bladeParameters": [
                        {
                          "name": "assessmentKey",
                          "source": "column",
                          "value": "assessmentKey"
                        }
                      ]
                    }
                  }
                },
                {
                  "columnMatch": "Passed",
                  "formatter": 5
                },
                {
                  "columnMatch": "Failed",
                  "formatter": 5
                },
                {
                  "columnMatch": "assessmentKey",
                  "formatter": 5
                }
              ],
              "labelSettings": [
                {
                  "columnId": "overallstate",
                  "label": "ComplianceState"
                }
              ]
            }
          },
          "conditionalVisibility": {
            "parameterName": "wbtab",
            "comparison": "isEqualTo",
            "value": "encryption"
          },
          "name": "dataintransit"
        },
        {
          "type": 3,
          "content": {
            "version": "KqlItem/1.0",
            "query": "securityresources\r\n    | where type == \"microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols/regulatorycomplianceassessments\"\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | where complianceStandardId ==  \"Azure Security Benchmark\"\r\n    | join kind = leftouter(\r\n    securityresources\r\n    | where type == \"microsoft.security/assessments\") on subscriptionId, name\r\n    | extend complianceState = properties.state\r\n    | extend resourceSource = tolower(tostring(properties1.resourceDetails.Source))\r\n    | extend recommendationId = id1\r\n    | extend resourceId = trim(' ', tolower(tostring(case(resourceSource =~ 'azure', properties1.resourceDetails.Id,\r\n                                                        resourceSource =~ 'gcp', properties1.resourceDetails.GcpResourceId,\r\n                                                        resourceSource =~ 'aws', properties1.resourceDetails.AwsResourceId,\r\n                                                        extract('^(.+)/providers/Microsoft.Security/assessments/.+$',1,recommendationId)))))\r\n    | extend regexResourceId = extract_all(@\"/providers/[^/]+(?:/([^/]+)/[^/]+(?:/[^/]+/[^/]+)?)?/([^/]+)/([^/]+)$\", resourceId)[0]\r\n    | extend resourceType = iff(regexResourceId[1] != \"\", regexResourceId[1], iff(regexResourceId[0] != \"\", regexResourceId[0], \"subscriptions\"))\r\n    | extend resourceName = regexResourceId[2]\r\n    | extend recommendationName = name\r\n    | extend RecommendationName = properties1.displayName\r\n    | extend description = properties1.metadata.description\r\n    | extend remediationSteps = properties1.metadata.remediationDescription\r\n    | extend severity = properties1.metadata.severity\r\n    | extend state = properties1.status.code\r\n    | extend notApplicableReason = properties1.status.cause\r\n    | extend RecommendationLink = properties1.links.azurePortal\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | extend complianceControlId = extract(@\"/regulatoryComplianceControls/([^/]*)\", 1, id)\r\n    | join kind = leftouter (securityresources\r\n    | where type == \"microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols\"\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | where complianceStandardId == \"Azure Security Benchmark\"\r\n    | extend  controlName = tostring(properties.description)\r\n    | project controlId = name, controlName\r\n    | distinct  *) on $right.controlId == $left.complianceControlId\r\n    | extend RecommendationName = tostring(properties.description)\r\n    | summarize Failed = countif(state == \"Unhealthy\"), Passed = countif(state == \"Healthy\" or complianceState == \"Passed\"), Total = countif(state == \"Unhealthy\" or state == \"Healthy\" or complianceState == \"Passed\") by RecommendationName, ControlID = controlId\r\n    | extend PassedControls = (Passed/todouble(Total))*100\r\n| join kind = leftouter (securityresources\r\n    | where type == \"microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols/regulatorycomplianceassessments\"\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | where complianceStandardId ==  \"Azure Security Benchmark\"\r\n    | extend RecommendationName = tostring(properties.description)\r\n    | extend RecommendationLink = tostring(properties.assessmentDetailsLink)\r\n    | project RecommendationName, RecommendationLink, name) on RecommendationName \r\n| extend Remediate=RecommendationLink\r\n| where ControlID in ( \"DP.4\")\r\n| parse Remediate with * '/#blade/Microsoft_Azure_Security/RecommendationsBlade/assessmentKey/' assessmentKey '/' *\r\n| extend overallstate= iff(PassedControls==100, \"Passed\", \"Failed\")\r\n| distinct RecommendationName, Total,  PassedControls, overallstate,Remediate,Passed, Failed, assessmentKey\r\n| sort by Total, Passed desc\r\n| limit 250",
            "size": 1,
            "title": "Data at rest is protected with encryption.",
            "showExportToExcel": true,
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "crossComponentResources": [
              "{SubscriptionName}"
            ],
            "gridSettings": {
              "formatters": [
                {
                  "columnMatch": "RecommendationName",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "success",
                        "text": "{0}{1}"
                      }
                    ]
                  }
                },
                {
                  "columnMatch": "Total",
                  "formatter": 5,
                  "formatOptions": {
                    "compositeBarSettings": {
                      "labelText": "[[[\"Passed\"]/[\"Total\"]]",
                      "columnSettings": [
                        {
                          "columnName": "Passed",
                          "color": "green"
                        },
                        {
                          "columnName": "Failed",
                          "color": "redBright"
                        }
                      ]
                    }
                  },
                  "tooltipFormat": {
                    "tooltip": "Passed/Total"
                  }
                },
                {
                  "columnMatch": "PassedControls",
                  "formatter": 5,
                  "numberFormat": {
                    "unit": 1,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true
                    }
                  }
                },
                {
                  "columnMatch": "overallstate",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": "contains",
                        "thresholdValue": "Passed",
                        "representation": "success",
                        "text": "{0}{1}"
                      },
                      {
                        "operator": "contains",
                        "thresholdValue": "Failed",
                        "representation": "failed",
                        "text": "{0}{1}"
                      },
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "success",
                        "text": "{0}{1}"
                      }
                    ]
                  }
                },
                {
                  "columnMatch": "Remediate",
                  "formatter": 7,
                  "formatOptions": {
                    "linkTarget": "OpenBlade",
                    "linkLabel": "view recommendation",
                    "bladeOpenContext": {
                      "bladeName": "RecommendationsBlade",
                      "extensionName": "Microsoft_Azure_Security",
                      "bladeParameters": [
                        {
                          "name": "assessmentKey",
                          "source": "column",
                          "value": "assessmentKey"
                        }
                      ]
                    }
                  }
                },
                {
                  "columnMatch": "Passed",
                  "formatter": 5
                },
                {
                  "columnMatch": "Failed",
                  "formatter": 5
                },
                {
                  "columnMatch": "assessmentKey",
                  "formatter": 5
                }
              ],
              "labelSettings": [
                {
                  "columnId": "overallstate",
                  "label": "ComplianceState"
                }
              ]
            }
          },
          "conditionalVisibility": {
            "parameterName": "wbtab",
            "comparison": "isEqualTo",
            "value": "encryption"
          },
          "name": "dataatrest"
        },
        {
          "type": 3,
          "content": {
            "version": "KqlItem/1.0",
            "query": "securityresources\r\n    | where type == \"microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols/regulatorycomplianceassessments\"\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | where complianceStandardId ==  \"Azure Security Benchmark\"\r\n    | join kind = leftouter(\r\n    securityresources\r\n    | where type == \"microsoft.security/assessments\") on subscriptionId, name\r\n    | extend complianceState = properties.state\r\n    | extend resourceSource = tolower(tostring(properties1.resourceDetails.Source))\r\n    | extend recommendationId = id1\r\n    | extend resourceId = trim(' ', tolower(tostring(case(resourceSource =~ 'azure', properties1.resourceDetails.Id,\r\n                                                        resourceSource =~ 'gcp', properties1.resourceDetails.GcpResourceId,\r\n                                                        resourceSource =~ 'aws', properties1.resourceDetails.AwsResourceId,\r\n                                                        extract('^(.+)/providers/Microsoft.Security/assessments/.+$',1,recommendationId)))))\r\n    | extend regexResourceId = extract_all(@\"/providers/[^/]+(?:/([^/]+)/[^/]+(?:/[^/]+/[^/]+)?)?/([^/]+)/([^/]+)$\", resourceId)[0]\r\n    | extend resourceType = iff(regexResourceId[1] != \"\", regexResourceId[1], iff(regexResourceId[0] != \"\", regexResourceId[0], \"subscriptions\"))\r\n    | extend resourceName = regexResourceId[2]\r\n    | extend recommendationName = name\r\n    | extend RecommendationName = properties1.displayName\r\n    | extend description = properties1.metadata.description\r\n    | extend remediationSteps = properties1.metadata.remediationDescription\r\n    | extend severity = properties1.metadata.severity\r\n    | extend state = properties1.status.code\r\n    | extend notApplicableReason = properties1.status.cause\r\n    | extend RecommendationLink = properties1.links.azurePortal\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | extend complianceControlId = extract(@\"/regulatoryComplianceControls/([^/]*)\", 1, id)\r\n    | join kind = leftouter (securityresources\r\n    | where type == \"microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols\"\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | where complianceStandardId == \"Azure Security Benchmark\"\r\n    | extend  controlName = tostring(properties.description)\r\n    | project controlId = name, controlName\r\n    | distinct  *) on $right.controlId == $left.complianceControlId\r\n    | extend RecommendationName = tostring(properties.description)\r\n    | summarize Failed = countif(state == \"Unhealthy\"), Passed = countif(state == \"Healthy\" or complianceState == \"Passed\"), Total = countif(state == \"Unhealthy\" or state == \"Healthy\" or complianceState == \"Passed\") by RecommendationName, ControlID = controlId\r\n    | extend PassedControls = (Passed/todouble(Total))*100\r\n| join kind = leftouter (securityresources\r\n    | where type == \"microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols/regulatorycomplianceassessments\"\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | where complianceStandardId ==  \"Azure Security Benchmark\"\r\n    | extend RecommendationName = tostring(properties.description)\r\n    | extend RecommendationLink = tostring(properties.assessmentDetailsLink)\r\n    | project RecommendationName, RecommendationLink, name) on RecommendationName \r\n| extend Remediate=RecommendationLink\r\n| where ControlID in ( \"AM.2\")\r\n| parse Remediate with * '/#blade/Microsoft_Azure_Security/RecommendationsBlade/assessmentKey/' assessmentKey '/' *\r\n| extend overallstate= iff(PassedControls==100, \"Passed\", \"Failed\")\r\n| distinct RecommendationName, Total,  PassedControls, overallstate,Remediate,Passed, Failed, assessmentKey\r\n| sort by Total, Passed desc\r\n| limit 250",
            "size": 1,
            "title": "Virtual disk files for virtual machines which are associated with this workload are encrypted.",
            "showExportToExcel": true,
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "crossComponentResources": [
              "{SubscriptionName}"
            ],
            "gridSettings": {
              "formatters": [
                {
                  "columnMatch": "RecommendationName",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "success",
                        "text": "{0}{1}"
                      }
                    ]
                  }
                },
                {
                  "columnMatch": "Total",
                  "formatter": 5,
                  "formatOptions": {
                    "compositeBarSettings": {
                      "labelText": "[[[\"Passed\"]/[\"Total\"]]",
                      "columnSettings": [
                        {
                          "columnName": "Passed",
                          "color": "green"
                        },
                        {
                          "columnName": "Failed",
                          "color": "redBright"
                        }
                      ]
                    }
                  },
                  "tooltipFormat": {
                    "tooltip": "Passed/Total"
                  }
                },
                {
                  "columnMatch": "PassedControls",
                  "formatter": 5,
                  "numberFormat": {
                    "unit": 1,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true
                    }
                  }
                },
                {
                  "columnMatch": "overallstate",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": "contains",
                        "thresholdValue": "Passed",
                        "representation": "success",
                        "text": "{0}{1}"
                      },
                      {
                        "operator": "contains",
                        "thresholdValue": "Failed",
                        "representation": "failed",
                        "text": "{0}{1}"
                      },
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "success",
                        "text": "{0}{1}"
                      }
                    ]
                  }
                },
                {
                  "columnMatch": "Remediate",
                  "formatter": 7,
                  "formatOptions": {
                    "linkTarget": "OpenBlade",
                    "linkLabel": "view recommendation",
                    "bladeOpenContext": {
                      "bladeName": "RecommendationsBlade",
                      "extensionName": "Microsoft_Azure_Security",
                      "bladeParameters": [
                        {
                          "name": "assessmentKey",
                          "source": "column",
                          "value": "assessmentKey"
                        }
                      ]
                    }
                  }
                },
                {
                  "columnMatch": "Passed",
                  "formatter": 5
                },
                {
                  "columnMatch": "Failed",
                  "formatter": 5
                },
                {
                  "columnMatch": "assessmentKey",
                  "formatter": 5
                }
              ],
              "labelSettings": [
                {
                  "columnId": "overallstate",
                  "label": "ComplianceState"
                }
              ]
            }
          },
          "conditionalVisibility": {
            "parameterName": "wbtab",
            "comparison": "isEqualTo",
            "value": "encryption"
          },
          "name": "classicresources"
        },
        {
          "type": 3,
          "content": {
            "version": "KqlItem/1.0",
            "query": "resources\r\n| where type =~ 'Microsoft.Compute/virtualMachines' \r\n| where isnull(properties.storageProfile.osDisk.managedDisk)",
            "size": 1,
            "title": "Virtual Machines not having  managed disks",
            "showExportToExcel": true,
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "crossComponentResources": [
              "{SubscriptionName}"
            ],
            "gridSettings": {
              "formatters": [
                {
                  "columnMatch": "RecommendationName",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "success",
                        "text": "{0}{1}"
                      }
                    ]
                  }
                },
                {
                  "columnMatch": "Total",
                  "formatter": 22,
                  "formatOptions": {
                    "compositeBarSettings": {
                      "labelText": "[[[\"Passed\"]/[\"Total\"]]",
                      "columnSettings": [
                        {
                          "columnName": "Passed",
                          "color": "green"
                        },
                        {
                          "columnName": "Failed",
                          "color": "redBright"
                        }
                      ]
                    }
                  },
                  "tooltipFormat": {
                    "tooltip": "Passed/Total"
                  }
                },
                {
                  "columnMatch": "Remediate",
                  "formatter": 7,
                  "formatOptions": {
                    "linkTarget": "OpenBlade",
                    "linkLabel": "Remediate>>",
                    "bladeOpenContext": {
                      "bladeName": "RecommendationsBlade",
                      "extensionName": "Microsoft_Azure_Security",
                      "bladeParameters": [
                        {
                          "name": "assessmentKey",
                          "source": "column",
                          "value": "assessmentKey"
                        }
                      ]
                    }
                  }
                },
                {
                  "columnMatch": "PassedControls",
                  "formatter": 0,
                  "numberFormat": {
                    "unit": 1,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true
                    }
                  }
                },
                {
                  "columnMatch": "Passed",
                  "formatter": 5
                },
                {
                  "columnMatch": "Failed",
                  "formatter": 5
                },
                {
                  "columnMatch": "assessmentKey",
                  "formatter": 5
                }
              ]
            }
          },
          "conditionalVisibility": {
            "parameterName": "wbtab",
            "comparison": "isEqualTo",
            "value": "encryption"
          },
          "name": "unmanageddisks"
        },
        {
          "type": 3,
          "content": {
            "version": "KqlItem/1.0",
            "query": "securityresources\r\n    | where type == \"microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols/regulatorycomplianceassessments\"\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | where complianceStandardId ==  \"Azure Security Benchmark\"\r\n    | join kind = leftouter(\r\n    securityresources\r\n    | where type == \"microsoft.security/assessments\") on subscriptionId, name\r\n    | extend complianceState = properties.state\r\n    | extend resourceSource = tolower(tostring(properties1.resourceDetails.Source))\r\n    | extend recommendationId = id1\r\n    | extend resourceId = trim(' ', tolower(tostring(case(resourceSource =~ 'azure', properties1.resourceDetails.Id,\r\n                                                        resourceSource =~ 'gcp', properties1.resourceDetails.GcpResourceId,\r\n                                                        resourceSource =~ 'aws', properties1.resourceDetails.AwsResourceId,\r\n                                                        extract('^(.+)/providers/Microsoft.Security/assessments/.+$',1,recommendationId)))))\r\n    | extend regexResourceId = extract_all(@\"/providers/[^/]+(?:/([^/]+)/[^/]+(?:/[^/]+/[^/]+)?)?/([^/]+)/([^/]+)$\", resourceId)[0]\r\n    | extend resourceType = iff(regexResourceId[1] != \"\", regexResourceId[1], iff(regexResourceId[0] != \"\", regexResourceId[0], \"subscriptions\"))\r\n    | extend resourceName = regexResourceId[2]\r\n    | extend recommendationName = name\r\n    | extend RecommendationName = properties1.displayName\r\n    | extend description = properties1.metadata.description\r\n    | extend remediationSteps = properties1.metadata.remediationDescription\r\n    | extend severity = properties1.metadata.severity\r\n    | extend state = properties1.status.code\r\n    | extend notApplicableReason = properties1.status.cause\r\n    | extend RecommendationLink = properties1.links.azurePortal\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | extend complianceControlId = extract(@\"/regulatoryComplianceControls/([^/]*)\", 1, id)\r\n    | join kind = leftouter (securityresources\r\n    | where type == \"microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols\"\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | where complianceStandardId == \"Azure Security Benchmark\"\r\n    | extend  controlName = tostring(properties.description)\r\n    | project controlId = name, controlName\r\n    | distinct  *) on $right.controlId == $left.complianceControlId\r\n    | extend RecommendationName = tostring(properties.description)\r\n    | summarize Failed = countif(state == \"Unhealthy\"), Passed = countif(state == \"Healthy\" or complianceState == \"Passed\"), Total = countif(state == \"Unhealthy\" or state == \"Healthy\" or complianceState == \"Passed\") by RecommendationName, ControlID = controlId\r\n    | extend PassedControls = (Passed/todouble(Total))*100\r\n| join kind = leftouter (securityresources\r\n    | where type == \"microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols/regulatorycomplianceassessments\"\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | where complianceStandardId ==  \"Azure Security Benchmark\"\r\n    | extend RecommendationName = tostring(properties.description)\r\n    | extend RecommendationLink = tostring(properties.assessmentDetailsLink)\r\n    | project RecommendationName, RecommendationLink, name) on RecommendationName \r\n| extend Remediate=RecommendationLink\r\n| where ControlID in ( \"DP.7\")\r\n| parse Remediate with * '/#blade/Microsoft_Azure_Security/RecommendationsBlade/assessmentKey/' assessmentKey '/' *\r\n| extend overallstate= iff(PassedControls==100, \"Passed\", \"Failed\")\r\n| distinct RecommendationName, Total,  PassedControls, overallstate,Remediate,Passed, Failed, assessmentKey\r\n| sort by Total, Passed desc\r\n| limit 250",
            "size": 1,
            "title": "Secret/key rotation procedures are in place",
            "showExportToExcel": true,
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "crossComponentResources": [
              "{SubscriptionName}"
            ],
            "gridSettings": {
              "formatters": [
                {
                  "columnMatch": "RecommendationName",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "success",
                        "text": "{0}{1}"
                      }
                    ]
                  }
                },
                {
                  "columnMatch": "Total",
                  "formatter": 5,
                  "formatOptions": {
                    "compositeBarSettings": {
                      "labelText": "[[[\"Passed\"]/[\"Total\"]]",
                      "columnSettings": [
                        {
                          "columnName": "Passed",
                          "color": "green"
                        },
                        {
                          "columnName": "Failed",
                          "color": "redBright"
                        }
                      ]
                    }
                  },
                  "tooltipFormat": {
                    "tooltip": "Passed/Total"
                  }
                },
                {
                  "columnMatch": "PassedControls",
                  "formatter": 5,
                  "numberFormat": {
                    "unit": 1,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true
                    }
                  }
                },
                {
                  "columnMatch": "overallstate",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": "contains",
                        "thresholdValue": "Passed",
                        "representation": "success",
                        "text": "{0}{1}"
                      },
                      {
                        "operator": "contains",
                        "thresholdValue": "Failed",
                        "representation": "failed",
                        "text": "{0}{1}"
                      },
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "success",
                        "text": "{0}{1}"
                      }
                    ]
                  }
                },
                {
                  "columnMatch": "Remediate",
                  "formatter": 7,
                  "formatOptions": {
                    "linkTarget": "OpenBlade",
                    "linkLabel": "view recommendation",
                    "bladeOpenContext": {
                      "bladeName": "RecommendationsBlade",
                      "extensionName": "Microsoft_Azure_Security",
                      "bladeParameters": [
                        {
                          "name": "assessmentKey",
                          "source": "column",
                          "value": "assessmentKey"
                        }
                      ]
                    }
                  }
                },
                {
                  "columnMatch": "Passed",
                  "formatter": 5
                },
                {
                  "columnMatch": "Failed",
                  "formatter": 5
                },
                {
                  "columnMatch": "assessmentKey",
                  "formatter": 5
                }
              ],
              "labelSettings": [
                {
                  "columnId": "overallstate",
                  "label": "ComplianceState"
                }
              ]
            }
          },
          "conditionalVisibility": {
            "parameterName": "wbtab",
            "comparison": "isEqualTo",
            "value": "encryption"
          },
          "name": "SSLcertificates"
        },
        {
          "type": 3,
          "content": {
            "version": "KqlItem/1.0",
            "query": "securityresources\r\n    | where type == \"microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols/regulatorycomplianceassessments\"\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | where complianceStandardId ==  \"Azure Security Benchmark\"\r\n    | join kind = leftouter(\r\n    securityresources\r\n    | where type == \"microsoft.security/assessments\") on subscriptionId, name\r\n    | extend complianceState = properties.state\r\n    | extend resourceSource = tolower(tostring(properties1.resourceDetails.Source))\r\n    | extend recommendationId = id1\r\n    | extend resourceId = trim(' ', tolower(tostring(case(resourceSource =~ 'azure', properties1.resourceDetails.Id,\r\n                                                        resourceSource =~ 'gcp', properties1.resourceDetails.GcpResourceId,\r\n                                                        resourceSource =~ 'aws', properties1.resourceDetails.AwsResourceId,\r\n                                                        extract('^(.+)/providers/Microsoft.Security/assessments/.+$',1,recommendationId)))))\r\n    | extend regexResourceId = extract_all(@\"/providers/[^/]+(?:/([^/]+)/[^/]+(?:/[^/]+/[^/]+)?)?/([^/]+)/([^/]+)$\", resourceId)[0]\r\n    | extend resourceType = iff(regexResourceId[1] != \"\", regexResourceId[1], iff(regexResourceId[0] != \"\", regexResourceId[0], \"subscriptions\"))\r\n    | extend resourceName = regexResourceId[2]\r\n    | extend recommendationName = name\r\n    | extend RecommendationName = properties1.displayName\r\n    | extend description = properties1.metadata.description\r\n    | extend remediationSteps = properties1.metadata.remediationDescription\r\n    | extend severity = properties1.metadata.severity\r\n    | extend state = properties1.status.code\r\n    | extend notApplicableReason = properties1.status.cause\r\n    | extend RecommendationLink = properties1.links.azurePortal\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | extend complianceControlId = extract(@\"/regulatoryComplianceControls/([^/]*)\", 1, id)\r\n    | join kind = leftouter (securityresources\r\n    | where type == \"microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols\"\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | where complianceStandardId == \"Azure Security Benchmark\"\r\n    | extend  controlName = tostring(properties.description)\r\n    | project controlId = name, controlName\r\n    | distinct  *) on $right.controlId == $left.complianceControlId\r\n    | extend RecommendationName = tostring(properties.description)\r\n    | summarize Failed = countif(state == \"Unhealthy\"), Passed = countif(state == \"Healthy\" or complianceState == \"Passed\"), Total = countif(state == \"Unhealthy\" or state == \"Healthy\" or complianceState == \"Passed\") by RecommendationName, ControlID = controlId\r\n    | extend PassedControls = (Passed/todouble(Total))*100\r\n| join kind = leftouter (securityresources\r\n    | where type == \"microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols/regulatorycomplianceassessments\"\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | where complianceStandardId ==  \"Azure Security Benchmark\"\r\n    | extend RecommendationName = tostring(properties.description)\r\n    | extend RecommendationLink = tostring(properties.assessmentDetailsLink)\r\n    | project RecommendationName, RecommendationLink, name) on RecommendationName \r\n| extend Remediate=RecommendationLink\r\n| where ControlID in ( \"PA.1\")\r\n| parse Remediate with * '/#blade/Microsoft_Azure_Security/RecommendationsBlade/assessmentKey/' assessmentKey '/' *\r\n| extend overallstate= iff(PassedControls==100, \"Passed\", \"Failed\")\r\n| distinct RecommendationName, Total,  PassedControls, overallstate,Remediate,Passed, Failed, assessmentKey\r\n| sort by Total, Passed desc\r\n| limit 250",
            "size": 1,
            "title": "There are processes and tools being used to manage privileged activities. Long standing administrative access is avoided whenever possible.",
            "showExportToExcel": true,
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "crossComponentResources": [
              "{SubscriptionName}"
            ],
            "gridSettings": {
              "formatters": [
                {
                  "columnMatch": "RecommendationName",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "success",
                        "text": "{0}{1}"
                      }
                    ]
                  }
                },
                {
                  "columnMatch": "Total",
                  "formatter": 5,
                  "formatOptions": {
                    "compositeBarSettings": {
                      "labelText": "[[[\"Passed\"]/[\"Total\"]]",
                      "columnSettings": [
                        {
                          "columnName": "Passed",
                          "color": "green"
                        },
                        {
                          "columnName": "Failed",
                          "color": "redBright"
                        }
                      ]
                    }
                  },
                  "tooltipFormat": {
                    "tooltip": "Passed/Total"
                  }
                },
                {
                  "columnMatch": "PassedControls",
                  "formatter": 5,
                  "numberFormat": {
                    "unit": 1,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true
                    }
                  }
                },
                {
                  "columnMatch": "overallstate",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": "contains",
                        "thresholdValue": "Passed",
                        "representation": "success",
                        "text": "{0}{1}"
                      },
                      {
                        "operator": "contains",
                        "thresholdValue": "Failed",
                        "representation": "failed",
                        "text": "{0}{1}"
                      },
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "success",
                        "text": "{0}{1}"
                      }
                    ]
                  }
                },
                {
                  "columnMatch": "Remediate",
                  "formatter": 7,
                  "formatOptions": {
                    "linkTarget": "OpenBlade",
                    "linkLabel": "view recommendation",
                    "bladeOpenContext": {
                      "bladeName": "RecommendationsBlade",
                      "extensionName": "Microsoft_Azure_Security",
                      "bladeParameters": [
                        {
                          "name": "assessmentKey",
                          "source": "column",
                          "value": "assessmentKey"
                        }
                      ]
                    }
                  }
                },
                {
                  "columnMatch": "Passed",
                  "formatter": 5
                },
                {
                  "columnMatch": "Failed",
                  "formatter": 5
                },
                {
                  "columnMatch": "assessmentKey",
                  "formatter": 5
                }
              ],
              "labelSettings": [
                {
                  "columnId": "overallstate",
                  "label": "ComplianceState"
                }
              ]
            }
          },
          "conditionalVisibility": {
            "parameterName": "wbtab",
            "comparison": "isEqualTo",
            "value": "identity"
          },
          "name": "owner"
        },
        {
          "type": 3,
          "content": {
            "version": "KqlItem/1.0",
            "query": "securityresources\r\n    | where type == \"microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols/regulatorycomplianceassessments\"\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | where complianceStandardId ==  \"Azure Security Benchmark\"\r\n    | join kind = leftouter(\r\n    securityresources\r\n    | where type == \"microsoft.security/assessments\") on subscriptionId, name\r\n    | extend complianceState = properties.state\r\n    | extend resourceSource = tolower(tostring(properties1.resourceDetails.Source))\r\n    | extend recommendationId = id1\r\n    | extend resourceId = trim(' ', tolower(tostring(case(resourceSource =~ 'azure', properties1.resourceDetails.Id,\r\n                                                        resourceSource =~ 'gcp', properties1.resourceDetails.GcpResourceId,\r\n                                                        resourceSource =~ 'aws', properties1.resourceDetails.AwsResourceId,\r\n                                                        extract('^(.+)/providers/Microsoft.Security/assessments/.+$',1,recommendationId)))))\r\n    | extend regexResourceId = extract_all(@\"/providers/[^/]+(?:/([^/]+)/[^/]+(?:/[^/]+/[^/]+)?)?/([^/]+)/([^/]+)$\", resourceId)[0]\r\n    | extend resourceType = iff(regexResourceId[1] != \"\", regexResourceId[1], iff(regexResourceId[0] != \"\", regexResourceId[0], \"subscriptions\"))\r\n    | extend resourceName = regexResourceId[2]\r\n    | extend recommendationName = name\r\n    | extend RecommendationName = properties1.displayName\r\n    | extend description = properties1.metadata.description\r\n    | extend remediationSteps = properties1.metadata.remediationDescription\r\n    | extend severity = properties1.metadata.severity\r\n    | extend state = properties1.status.code\r\n    | extend notApplicableReason = properties1.status.cause\r\n    | extend RecommendationLink = properties1.links.azurePortal\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | extend complianceControlId = extract(@\"/regulatoryComplianceControls/([^/]*)\", 1, id)\r\n    | join kind = leftouter (securityresources\r\n    | where type == \"microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols\"\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | where complianceStandardId == \"Azure Security Benchmark\"\r\n    | extend  controlName = tostring(properties.description)\r\n    | project controlId = name, controlName\r\n    | distinct  *) on $right.controlId == $left.complianceControlId\r\n    | extend RecommendationName = tostring(properties.description)\r\n    | summarize Failed = countif(state == \"Unhealthy\"), Passed = countif(state == \"Healthy\" or complianceState == \"Passed\"), Total = countif(state == \"Unhealthy\" or state == \"Healthy\" or complianceState == \"Passed\") by RecommendationName, ControlID = controlId\r\n    | extend PassedControls = (Passed/todouble(Total))*100\r\n| join kind = leftouter (securityresources\r\n    | where type == \"microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols/regulatorycomplianceassessments\"\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | where complianceStandardId ==  \"Azure Security Benchmark\"\r\n    | extend RecommendationName = tostring(properties.description)\r\n    | extend RecommendationLink = tostring(properties.assessmentDetailsLink)\r\n    | project RecommendationName, RecommendationLink, name) on RecommendationName \r\n| extend Remediate=RecommendationLink\r\n| where ControlID in ( \"IM.6\")\r\n| parse Remediate with * '/#blade/Microsoft_Azure_Security/RecommendationsBlade/assessmentKey/' assessmentKey '/' *\r\n| extend overallstate= iff(PassedControls==100, \"Passed\", \"Failed\")\r\n| distinct RecommendationName, Total,  PassedControls, overallstate,Remediate,Passed, Failed, assessmentKey\r\n| sort by Total, Passed desc\r\n| limit 250",
            "size": 1,
            "title": "Password-less or multi-factor authentication (MFA) is enforced for users of this workload.",
            "showExportToExcel": true,
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "crossComponentResources": [
              "{SubscriptionName}"
            ],
            "gridSettings": {
              "formatters": [
                {
                  "columnMatch": "RecommendationName",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "success",
                        "text": "{0}{1}"
                      }
                    ]
                  }
                },
                {
                  "columnMatch": "Total",
                  "formatter": 5,
                  "formatOptions": {
                    "compositeBarSettings": {
                      "labelText": "[[[\"Passed\"]/[\"Total\"]]",
                      "columnSettings": [
                        {
                          "columnName": "Passed",
                          "color": "green"
                        },
                        {
                          "columnName": "Failed",
                          "color": "redBright"
                        }
                      ]
                    }
                  },
                  "tooltipFormat": {
                    "tooltip": "Passed/Total"
                  }
                },
                {
                  "columnMatch": "PassedControls",
                  "formatter": 5,
                  "numberFormat": {
                    "unit": 1,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true
                    }
                  }
                },
                {
                  "columnMatch": "overallstate",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": "contains",
                        "thresholdValue": "Passed",
                        "representation": "success",
                        "text": "{0}{1}"
                      },
                      {
                        "operator": "contains",
                        "thresholdValue": "Failed",
                        "representation": "failed",
                        "text": "{0}{1}"
                      },
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "success",
                        "text": "{0}{1}"
                      }
                    ]
                  }
                },
                {
                  "columnMatch": "Remediate",
                  "formatter": 7,
                  "formatOptions": {
                    "linkTarget": "OpenBlade",
                    "linkLabel": "view recommendation",
                    "bladeOpenContext": {
                      "bladeName": "RecommendationsBlade",
                      "extensionName": "Microsoft_Azure_Security",
                      "bladeParameters": [
                        {
                          "name": "assessmentKey",
                          "source": "column",
                          "value": "assessmentKey"
                        }
                      ]
                    }
                  }
                },
                {
                  "columnMatch": "Passed",
                  "formatter": 5
                },
                {
                  "columnMatch": "Failed",
                  "formatter": 5
                },
                {
                  "columnMatch": "assessmentKey",
                  "formatter": 5
                }
              ],
              "labelSettings": [
                {
                  "columnId": "overallstate",
                  "label": "ComplianceState"
                }
              ]
            }
          },
          "conditionalVisibility": {
            "parameterName": "wbtab",
            "comparison": "isEqualTo",
            "value": "identity"
          },
          "name": "MFA"
        },
        {
          "type": 3,
          "content": {
            "version": "KqlItem/1.0",
            "query": "securityresources\r\n    | where type == \"microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols/regulatorycomplianceassessments\"\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | where complianceStandardId ==  \"Azure Security Benchmark\"\r\n    | join kind = leftouter(\r\n    securityresources\r\n    | where type == \"microsoft.security/assessments\") on subscriptionId, name\r\n    | extend complianceState = properties.state\r\n    | extend resourceSource = tolower(tostring(properties1.resourceDetails.Source))\r\n    | extend recommendationId = id1\r\n    | extend resourceId = trim(' ', tolower(tostring(case(resourceSource =~ 'azure', properties1.resourceDetails.Id,\r\n                                                        resourceSource =~ 'gcp', properties1.resourceDetails.GcpResourceId,\r\n                                                        resourceSource =~ 'aws', properties1.resourceDetails.AwsResourceId,\r\n                                                        extract('^(.+)/providers/Microsoft.Security/assessments/.+$',1,recommendationId)))))\r\n    | extend regexResourceId = extract_all(@\"/providers/[^/]+(?:/([^/]+)/[^/]+(?:/[^/]+/[^/]+)?)?/([^/]+)/([^/]+)$\", resourceId)[0]\r\n    | extend resourceType = iff(regexResourceId[1] != \"\", regexResourceId[1], iff(regexResourceId[0] != \"\", regexResourceId[0], \"subscriptions\"))\r\n    | extend resourceName = regexResourceId[2]\r\n    | extend recommendationName = name\r\n    | extend RecommendationName = properties1.displayName\r\n    | extend description = properties1.metadata.description\r\n    | extend remediationSteps = properties1.metadata.remediationDescription\r\n    | extend severity = properties1.metadata.severity\r\n    | extend state = properties1.status.code\r\n    | extend notApplicableReason = properties1.status.cause\r\n    | extend RecommendationLink = properties1.links.azurePortal\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | extend complianceControlId = extract(@\"/regulatoryComplianceControls/([^/]*)\", 1, id)\r\n    | join kind = leftouter (securityresources\r\n    | where type == \"microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols\"\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | where complianceStandardId == \"Azure Security Benchmark\"\r\n    | extend  controlName = tostring(properties.description)\r\n    | project controlId = name, controlName\r\n    | distinct  *) on $right.controlId == $left.complianceControlId\r\n    | extend RecommendationName = tostring(properties.description)\r\n    | summarize Failed = countif(state == \"Unhealthy\"), Passed = countif(state == \"Healthy\" or complianceState == \"Passed\"), Total = countif(state == \"Unhealthy\" or state == \"Healthy\" or complianceState == \"Passed\") by RecommendationName, ControlID = controlId\r\n    | extend PassedControls = (Passed/todouble(Total))*100\r\n| join kind = leftouter (securityresources\r\n    | where type == \"microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols/regulatorycomplianceassessments\"\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | where complianceStandardId ==  \"Azure Security Benchmark\"\r\n    | extend RecommendationName = tostring(properties.description)\r\n    | extend RecommendationLink = tostring(properties.assessmentDetailsLink)\r\n    | project RecommendationName, RecommendationLink, name) on RecommendationName \r\n| extend Remediate=RecommendationLink\r\n| where ControlID in ( \"PA.7\")\r\n| parse Remediate with * '/#blade/Microsoft_Azure_Security/RecommendationsBlade/assessmentKey/' assessmentKey '/' *\r\n| extend overallstate= iff(PassedControls==100, \"Passed\", \"Failed\")\r\n| distinct RecommendationName, Total,  PassedControls, overallstate,Remediate,Passed, Failed, assessmentKey\r\n| sort by Total, Passed desc\r\n| limit 250",
            "size": 1,
            "title": "Permissions to Azure workloads are rarely based on individual resources and custom permissions are rarely used.",
            "showExportToExcel": true,
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "crossComponentResources": [
              "{SubscriptionName}"
            ],
            "gridSettings": {
              "formatters": [
                {
                  "columnMatch": "RecommendationName",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "success",
                        "text": "{0}{1}"
                      }
                    ]
                  }
                },
                {
                  "columnMatch": "Total",
                  "formatter": 5,
                  "formatOptions": {
                    "compositeBarSettings": {
                      "labelText": "[[[\"Passed\"]/[\"Total\"]]",
                      "columnSettings": [
                        {
                          "columnName": "Passed",
                          "color": "green"
                        },
                        {
                          "columnName": "Failed",
                          "color": "redBright"
                        }
                      ]
                    }
                  },
                  "tooltipFormat": {
                    "tooltip": "Passed/Total"
                  }
                },
                {
                  "columnMatch": "PassedControls",
                  "formatter": 5,
                  "numberFormat": {
                    "unit": 1,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true
                    }
                  }
                },
                {
                  "columnMatch": "overallstate",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": "contains",
                        "thresholdValue": "Passed",
                        "representation": "success",
                        "text": "{0}{1}"
                      },
                      {
                        "operator": "contains",
                        "thresholdValue": "Failed",
                        "representation": "failed",
                        "text": "{0}{1}"
                      },
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "success",
                        "text": "{0}{1}"
                      }
                    ]
                  }
                },
                {
                  "columnMatch": "Remediate",
                  "formatter": 7,
                  "formatOptions": {
                    "linkTarget": "OpenBlade",
                    "linkLabel": "view recommendation",
                    "bladeOpenContext": {
                      "bladeName": "RecommendationsBlade",
                      "extensionName": "Microsoft_Azure_Security",
                      "bladeParameters": [
                        {
                          "name": "assessmentKey",
                          "source": "column",
                          "value": "assessmentKey"
                        }
                      ]
                    }
                  }
                },
                {
                  "columnMatch": "Passed",
                  "formatter": 5
                },
                {
                  "columnMatch": "Failed",
                  "formatter": 5
                },
                {
                  "columnMatch": "assessmentKey",
                  "formatter": 5
                }
              ],
              "labelSettings": [
                {
                  "columnId": "overallstate",
                  "label": "ComplianceState"
                }
              ]
            }
          },
          "conditionalVisibility": {
            "parameterName": "wbtab",
            "comparison": "isEqualTo",
            "value": "identity"
          },
          "name": "customrbac"
        },
        {
          "type": 3,
          "content": {
            "version": "KqlItem/1.0",
            "query": "securityresources\r\n    | where type == \"microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols/regulatorycomplianceassessments\"\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | where complianceStandardId ==  \"Azure Security Benchmark\"\r\n    | join kind = leftouter(\r\n    securityresources\r\n    | where type == \"microsoft.security/assessments\") on subscriptionId, name\r\n    | extend complianceState = properties.state\r\n    | extend resourceSource = tolower(tostring(properties1.resourceDetails.Source))\r\n    | extend recommendationId = id1\r\n    | extend resourceId = trim(' ', tolower(tostring(case(resourceSource =~ 'azure', properties1.resourceDetails.Id,\r\n                                                        resourceSource =~ 'gcp', properties1.resourceDetails.GcpResourceId,\r\n                                                        resourceSource =~ 'aws', properties1.resourceDetails.AwsResourceId,\r\n                                                        extract('^(.+)/providers/Microsoft.Security/assessments/.+$',1,recommendationId)))))\r\n    | extend regexResourceId = extract_all(@\"/providers/[^/]+(?:/([^/]+)/[^/]+(?:/[^/]+/[^/]+)?)?/([^/]+)/([^/]+)$\", resourceId)[0]\r\n    | extend resourceType = iff(regexResourceId[1] != \"\", regexResourceId[1], iff(regexResourceId[0] != \"\", regexResourceId[0], \"subscriptions\"))\r\n    | extend resourceName = regexResourceId[2]\r\n    | extend recommendationName = name\r\n    | extend RecommendationName = properties1.displayName\r\n    | extend description = properties1.metadata.description\r\n    | extend remediationSteps = properties1.metadata.remediationDescription\r\n    | extend severity = properties1.metadata.severity\r\n    | extend state = properties1.status.code\r\n    | extend notApplicableReason = properties1.status.cause\r\n    | extend RecommendationLink = properties1.links.azurePortal\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | extend complianceControlId = extract(@\"/regulatoryComplianceControls/([^/]*)\", 1, id)\r\n    | join kind = leftouter (securityresources\r\n    | where type == \"microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols\"\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | where complianceStandardId == \"Azure Security Benchmark\"\r\n    | extend  controlName = tostring(properties.description)\r\n    | project controlId = name, controlName\r\n    | distinct  *) on $right.controlId == $left.complianceControlId\r\n    | extend RecommendationName = tostring(properties.description)\r\n    | summarize Failed = countif(state == \"Unhealthy\"), Passed = countif(state == \"Healthy\" or complianceState == \"Passed\"), Total = countif(state == \"Unhealthy\" or state == \"Healthy\" or complianceState == \"Passed\") by RecommendationName, ControlID = controlId\r\n    | extend PassedControls = (Passed/todouble(Total))*100\r\n| join kind = leftouter (securityresources\r\n    | where type == \"microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols/regulatorycomplianceassessments\"\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | where complianceStandardId ==  \"Azure Security Benchmark\"\r\n    | extend RecommendationName = tostring(properties.description)\r\n    | extend RecommendationLink = tostring(properties.assessmentDetailsLink)\r\n    | project RecommendationName, RecommendationLink, name) on RecommendationName \r\n| extend Remediate=RecommendationLink\r\n| where ControlID in ( \"IM.3\")\r\n| parse Remediate with * '/#blade/Microsoft_Azure_Security/RecommendationsBlade/assessmentKey/' assessmentKey '/' *\r\n| extend overallstate= iff(PassedControls==100, \"Passed\", \"Failed\")\r\n| distinct RecommendationName, Total,  PassedControls, overallstate,Remediate,Passed, Failed, assessmentKey\r\n| sort by Total, Passed desc\r\n| limit 250",
            "size": 1,
            "title": "When communicating with Azure platform services managed identities are preferred over API keys and connection strings.",
            "showExportToExcel": true,
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "crossComponentResources": [
              "{SubscriptionName}"
            ],
            "gridSettings": {
              "formatters": [
                {
                  "columnMatch": "RecommendationName",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "success",
                        "text": "{0}{1}"
                      }
                    ]
                  }
                },
                {
                  "columnMatch": "Total",
                  "formatter": 5,
                  "formatOptions": {
                    "compositeBarSettings": {
                      "labelText": "[[[\"Passed\"]/[\"Total\"]]",
                      "columnSettings": [
                        {
                          "columnName": "Passed",
                          "color": "green"
                        },
                        {
                          "columnName": "Failed",
                          "color": "redBright"
                        }
                      ]
                    }
                  },
                  "tooltipFormat": {
                    "tooltip": "Passed/Total"
                  }
                },
                {
                  "columnMatch": "PassedControls",
                  "formatter": 5,
                  "numberFormat": {
                    "unit": 1,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true
                    }
                  }
                },
                {
                  "columnMatch": "overallstate",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": "contains",
                        "thresholdValue": "Passed",
                        "representation": "success",
                        "text": "{0}{1}"
                      },
                      {
                        "operator": "contains",
                        "thresholdValue": "Failed",
                        "representation": "failed",
                        "text": "{0}{1}"
                      },
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "success",
                        "text": "{0}{1}"
                      }
                    ]
                  }
                },
                {
                  "columnMatch": "Remediate",
                  "formatter": 7,
                  "formatOptions": {
                    "linkTarget": "OpenBlade",
                    "linkLabel": "view recommendation",
                    "bladeOpenContext": {
                      "bladeName": "RecommendationsBlade",
                      "extensionName": "Microsoft_Azure_Security",
                      "bladeParameters": [
                        {
                          "name": "assessmentKey",
                          "source": "column",
                          "value": "assessmentKey"
                        }
                      ]
                    }
                  }
                },
                {
                  "columnMatch": "Passed",
                  "formatter": 5
                },
                {
                  "columnMatch": "Failed",
                  "formatter": 5
                },
                {
                  "columnMatch": "assessmentKey",
                  "formatter": 5
                }
              ]
            }
          },
          "conditionalVisibility": {
            "parameterName": "wbtab",
            "comparison": "isEqualTo",
            "value": "identity"
          },
          "name": "managedidentity"
        },
        {
          "type": 3,
          "content": {
            "version": "KqlItem/1.0",
            "query": "securityresources\r\n    | where type == \"microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols/regulatorycomplianceassessments\"\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | where complianceStandardId ==  \"Azure Security Benchmark\"\r\n    | join kind = leftouter(\r\n    securityresources\r\n    | where type == \"microsoft.security/assessments\") on subscriptionId, name\r\n    | extend complianceState = properties.state\r\n    | extend resourceSource = tolower(tostring(properties1.resourceDetails.Source))\r\n    | extend recommendationId = id1\r\n    | extend resourceId = trim(' ', tolower(tostring(case(resourceSource =~ 'azure', properties1.resourceDetails.Id,\r\n                                                        resourceSource =~ 'gcp', properties1.resourceDetails.GcpResourceId,\r\n                                                        resourceSource =~ 'aws', properties1.resourceDetails.AwsResourceId,\r\n                                                        extract('^(.+)/providers/Microsoft.Security/assessments/.+$',1,recommendationId)))))\r\n    | extend regexResourceId = extract_all(@\"/providers/[^/]+(?:/([^/]+)/[^/]+(?:/[^/]+/[^/]+)?)?/([^/]+)/([^/]+)$\", resourceId)[0]\r\n    | extend resourceType = iff(regexResourceId[1] != \"\", regexResourceId[1], iff(regexResourceId[0] != \"\", regexResourceId[0], \"subscriptions\"))\r\n    | extend resourceName = regexResourceId[2]\r\n    | extend recommendationName = name\r\n    | extend RecommendationName = properties1.displayName\r\n    | extend description = properties1.metadata.description\r\n    | extend remediationSteps = properties1.metadata.remediationDescription\r\n    | extend severity = properties1.metadata.severity\r\n    | extend state = properties1.status.code\r\n    | extend notApplicableReason = properties1.status.cause\r\n    | extend RecommendationLink = properties1.links.azurePortal\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | extend complianceControlId = extract(@\"/regulatoryComplianceControls/([^/]*)\", 1, id)\r\n    | join kind = leftouter (securityresources\r\n    | where type == \"microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols\"\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | where complianceStandardId == \"Azure Security Benchmark\"\r\n    | extend  controlName = tostring(properties.description)\r\n    | project controlId = name, controlName\r\n    | distinct  *) on $right.controlId == $left.complianceControlId\r\n    | extend RecommendationName = tostring(properties.description)\r\n    | summarize Failed = countif(state == \"Unhealthy\"), Passed = countif(state == \"Healthy\" or complianceState == \"Passed\"), Total = countif(state == \"Unhealthy\" or state == \"Healthy\" or complianceState == \"Passed\") by RecommendationName, ControlID = controlId\r\n    | extend PassedControls = (Passed/todouble(Total))*100\r\n| join kind = leftouter (securityresources\r\n    | where type == \"microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols/regulatorycomplianceassessments\"\r\n    | extend complianceStandardId = replace( \"-\", \" \", extract(@'/regulatoryComplianceStandards/([^/]*)', 1, id))\r\n    | where complianceStandardId ==  \"Azure Security Benchmark\"\r\n    | extend RecommendationName = tostring(properties.description)\r\n    | extend RecommendationLink = tostring(properties.assessmentDetailsLink)\r\n    | project RecommendationName, RecommendationLink, name) on RecommendationName \r\n| extend Remediate=RecommendationLink\r\n| where ControlID in ( \"IM.1\")\r\n| parse Remediate with * '/#blade/Microsoft_Azure_Security/RecommendationsBlade/assessmentKey/' assessmentKey '/' *\r\n| extend overallstate= iff(PassedControls==100, \"Passed\", \"Failed\")\r\n| distinct RecommendationName, Total,  PassedControls, overallstate,Remediate,Passed, Failed, assessmentKey\r\n| sort by Total, Passed desc\r\n| limit 250",
            "size": 1,
            "title": "Authentication via identity services is prioritized for this workload vs. cryptographic keys. ",
            "showExportToExcel": true,
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "crossComponentResources": [
              "{SubscriptionName}"
            ],
            "gridSettings": {
              "formatters": [
                {
                  "columnMatch": "RecommendationName",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "success",
                        "text": "{0}{1}"
                      }
                    ]
                  }
                },
                {
                  "columnMatch": "Total",
                  "formatter": 5,
                  "formatOptions": {
                    "compositeBarSettings": {
                      "labelText": "[[[\"Passed\"]/[\"Total\"]]",
                      "columnSettings": [
                        {
                          "columnName": "Passed",
                          "color": "green"
                        },
                        {
                          "columnName": "Failed",
                          "color": "redBright"
                        }
                      ]
                    }
                  },
                  "tooltipFormat": {
                    "tooltip": "Passed/Total"
                  }
                },
                {
                  "columnMatch": "PassedControls",
                  "formatter": 5,
                  "numberFormat": {
                    "unit": 1,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true
                    }
                  }
                },
                {
                  "columnMatch": "overallstate",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": "contains",
                        "thresholdValue": "Passed",
                        "representation": "success",
                        "text": "{0}{1}"
                      },
                      {
                        "operator": "contains",
                        "thresholdValue": "Failed",
                        "representation": "failed",
                        "text": "{0}{1}"
                      },
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "success",
                        "text": "{0}{1}"
                      }
                    ]
                  }
                },
                {
                  "columnMatch": "Remediate",
                  "formatter": 7,
                  "formatOptions": {
                    "linkTarget": "OpenBlade",
                    "linkLabel": "view recommendation",
                    "bladeOpenContext": {
                      "bladeName": "RecommendationsBlade",
                      "extensionName": "Microsoft_Azure_Security",
                      "bladeParameters": [
                        {
                          "name": "assessmentKey",
                          "source": "column",
                          "value": "assessmentKey"
                        }
                      ]
                    }
                  }
                },
                {
                  "columnMatch": "Passed",
                  "formatter": 5
                },
                {
                  "columnMatch": "Failed",
                  "formatter": 5
                },
                {
                  "columnMatch": "assessmentKey",
                  "formatter": 5
                }
              ],
              "labelSettings": [
                {
                  "columnId": "overallstate",
                  "label": "ComplianceState"
                }
              ]
            }
          },
          "conditionalVisibility": {
            "parameterName": "wbtab",
            "comparison": "isEqualTo",
            "value": "identity"
          },
          "name": "aadauthentication"
        },
        {
          "type": 3,
          "content": {
            "version": "KqlItem/1.0",
            "query": "Resources \r\n| where identity.type in (\"SystemAssigned\", \"UserAssigned\")\r\n| project name,type,resourceGroup, subscriptionId, identity.type",
            "size": 1,
            "title": "List of deployed Managed Identities ",
            "showExportToExcel": true,
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "crossComponentResources": [
              "{SubscriptionName}"
            ],
            "gridSettings": {
              "formatters": [
                {
                  "columnMatch": "name",
                  "formatter": 0,
                  "formatOptions": {
                    "customColumnWidthSetting": "30ch"
                  }
                },
                {
                  "columnMatch": "type",
                  "formatter": 0,
                  "formatOptions": {
                    "customColumnWidthSetting": "30ch"
                  }
                },
                {
                  "columnMatch": "resourceGroup",
                  "formatter": 0,
                  "formatOptions": {
                    "customColumnWidthSetting": "30ch"
                  }
                },
                {
                  "columnMatch": "subscriptionId",
                  "formatter": 0,
                  "formatOptions": {
                    "customColumnWidthSetting": "30ch"
                  }
                },
                {
                  "columnMatch": "RecommendationName",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "success",
                        "text": "{0}{1}"
                      }
                    ]
                  }
                },
                {
                  "columnMatch": "Total",
                  "formatter": 22,
                  "formatOptions": {
                    "compositeBarSettings": {
                      "labelText": "[[[\"Passed\"]/[\"Total\"]]",
                      "columnSettings": [
                        {
                          "columnName": "Passed",
                          "color": "green"
                        },
                        {
                          "columnName": "Failed",
                          "color": "redBright"
                        }
                      ]
                    }
                  },
                  "tooltipFormat": {
                    "tooltip": "Passed/Total"
                  }
                },
                {
                  "columnMatch": "Remediate",
                  "formatter": 7,
                  "formatOptions": {
                    "linkTarget": "OpenBlade",
                    "linkLabel": "Remediate>>",
                    "bladeOpenContext": {
                      "bladeName": "RecommendationsBlade",
                      "extensionName": "Microsoft_Azure_Security",
                      "bladeParameters": [
                        {
                          "name": "assessmentKey",
                          "source": "column",
                          "value": "assessmentKey"
                        }
                      ]
                    }
                  }
                },
                {
                  "columnMatch": "PassedControls",
                  "formatter": 0,
                  "numberFormat": {
                    "unit": 1,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true
                    }
                  }
                },
                {
                  "columnMatch": "Passed",
                  "formatter": 5
                },
                {
                  "columnMatch": "Failed",
                  "formatter": 5
                },
                {
                  "columnMatch": "assessmentKey",
                  "formatter": 5
                }
              ]
            }
          },
          "conditionalVisibility": {
            "parameterName": "wbtab",
            "comparison": "isEqualTo",
            "value": "identity"
          },
          "name": "systemassignedidentity"
        },
        {
          "type": 3,
          "content": {
            "version": "KqlItem/1.0",
            "query": "resourcecontainers\r\n| where type == \"microsoft.resources/subscriptions/resourcegroups\"\r\n| mvexpand tags\r\n| project  name,type,location,subscriptionId,tags\r\n| union (resources | project name,type,location,subscriptionId,tags)\r\n| where type  !in (\"microsoft.insights/workbooks\", \"microsoft.security/assignments\", \"microsoft.security/standards\", \"microsoft.compute/disks\", \"microsoft.compute/virtualmachines/extensions\", \"microsoft.insights/actiongroups\" )\r\n//| where isempty( ['tags'] )\r\n",
            "size": 1,
            "title": "Azure Tags are used to enrich Azure resources with operational metadata",
            "showExportToExcel": true,
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "crossComponentResources": [
              "{SubscriptionName}"
            ],
            "gridSettings": {
              "formatters": [
                {
                  "columnMatch": "RecommendationName",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "success",
                        "text": "{0}{1}"
                      }
                    ]
                  }
                },
                {
                  "columnMatch": "Total",
                  "formatter": 22,
                  "formatOptions": {
                    "compositeBarSettings": {
                      "labelText": "[[[\"Passed\"]/[\"Total\"]]",
                      "columnSettings": [
                        {
                          "columnName": "Passed",
                          "color": "green"
                        },
                        {
                          "columnName": "Failed",
                          "color": "redBright"
                        }
                      ]
                    }
                  },
                  "tooltipFormat": {
                    "tooltip": "Passed/Total"
                  }
                },
                {
                  "columnMatch": "Remediate",
                  "formatter": 7,
                  "formatOptions": {
                    "linkTarget": "OpenBlade",
                    "linkLabel": "Remediate>>",
                    "bladeOpenContext": {
                      "bladeName": "RecommendationsBlade",
                      "extensionName": "Microsoft_Azure_Security",
                      "bladeParameters": [
                        {
                          "name": "assessmentKey",
                          "source": "column",
                          "value": "assessmentKey"
                        }
                      ]
                    }
                  }
                },
                {
                  "columnMatch": "PassedControls",
                  "formatter": 0,
                  "numberFormat": {
                    "unit": 1,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true
                    }
                  }
                },
                {
                  "columnMatch": "Passed",
                  "formatter": 5
                },
                {
                  "columnMatch": "Failed",
                  "formatter": 5
                },
                {
                  "columnMatch": "assessmentKey",
                  "formatter": 5
                }
              ]
            }
          },
          "conditionalVisibility": {
            "parameterName": "wbtab",
            "comparison": "isEqualTo",
            "value": "compliance"
          },
          "name": "tagsempty"
        },
        {
          "type": 3,
          "content": {
            "version": "KqlItem/1.0",
            "query": "resources\r\n| where ['type'] has \"Microsoft.Cdn\"\r\n| project ['id'], name, ['kind'], resourceGroup, subscriptionId",
            "size": 1,
            "title": "CDN (content delivery network) is used to separate the hosting platform and end-users/clients.",
            "showExportToExcel": true,
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "crossComponentResources": [
              "{SubscriptionName}"
            ],
            "gridSettings": {
              "formatters": [
                {
                  "columnMatch": "RecommendationName",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "success",
                        "text": "{0}{1}"
                      }
                    ]
                  }
                },
                {
                  "columnMatch": "Total",
                  "formatter": 22,
                  "formatOptions": {
                    "compositeBarSettings": {
                      "labelText": "[[[\"Passed\"]/[\"Total\"]]",
                      "columnSettings": [
                        {
                          "columnName": "Passed",
                          "color": "green"
                        },
                        {
                          "columnName": "Failed",
                          "color": "redBright"
                        }
                      ]
                    }
                  },
                  "tooltipFormat": {
                    "tooltip": "Passed/Total"
                  }
                },
                {
                  "columnMatch": "Remediate",
                  "formatter": 7,
                  "formatOptions": {
                    "linkTarget": "OpenBlade",
                    "linkLabel": "Remediate>>",
                    "bladeOpenContext": {
                      "bladeName": "RecommendationsBlade",
                      "extensionName": "Microsoft_Azure_Security",
                      "bladeParameters": [
                        {
                          "name": "assessmentKey",
                          "source": "column",
                          "value": "assessmentKey"
                        }
                      ]
                    }
                  }
                },
                {
                  "columnMatch": "PassedControls",
                  "formatter": 0,
                  "numberFormat": {
                    "unit": 1,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true
                    }
                  }
                },
                {
                  "columnMatch": "Passed",
                  "formatter": 5
                },
                {
                  "columnMatch": "Failed",
                  "formatter": 5
                },
                {
                  "columnMatch": "assessmentKey",
                  "formatter": 5
                }
              ]
            }
          },
          "conditionalVisibility": {
            "parameterName": "wbtab",
            "comparison": "isEqualTo",
            "value": "update"
          },
          "name": "cdn"
        },
        {
          "type": 3,
          "content": {
            "version": "KqlItem/1.0",
            "query": "resources\r\n| where type contains \"logic\"\r\n| project id,type,location,resourceGroup, subscriptionId\r\n| order by location asc",
            "size": 1,
            "title": "Playbooks are built to help incident responders quickly understand the workload and components, to mitigate an attack and do an investigation.",
            "showExportToExcel": true,
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "crossComponentResources": [
              "{SubscriptionName}"
            ],
            "gridSettings": {
              "formatters": [
                {
                  "columnMatch": "RecommendationName",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "success",
                        "text": "{0}{1}"
                      }
                    ]
                  }
                },
                {
                  "columnMatch": "Total",
                  "formatter": 22,
                  "formatOptions": {
                    "compositeBarSettings": {
                      "labelText": "[[[\"Passed\"]/[\"Total\"]]",
                      "columnSettings": [
                        {
                          "columnName": "Passed",
                          "color": "green"
                        },
                        {
                          "columnName": "Failed",
                          "color": "redBright"
                        }
                      ]
                    }
                  },
                  "tooltipFormat": {
                    "tooltip": "Passed/Total"
                  }
                },
                {
                  "columnMatch": "Remediate",
                  "formatter": 7,
                  "formatOptions": {
                    "linkTarget": "OpenBlade",
                    "linkLabel": "Remediate>>",
                    "bladeOpenContext": {
                      "bladeName": "RecommendationsBlade",
                      "extensionName": "Microsoft_Azure_Security",
                      "bladeParameters": [
                        {
                          "name": "assessmentKey",
                          "source": "column",
                          "value": "assessmentKey"
                        }
                      ]
                    }
                  }
                },
                {
                  "columnMatch": "PassedControls",
                  "formatter": 0,
                  "numberFormat": {
                    "unit": 1,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true
                    }
                  }
                },
                {
                  "columnMatch": "Passed",
                  "formatter": 5
                },
                {
                  "columnMatch": "Failed",
                  "formatter": 5
                },
                {
                  "columnMatch": "assessmentKey",
                  "formatter": 5
                }
              ]
            }
          },
          "conditionalVisibility": {
            "parameterName": "wbtab",
            "comparison": "isEqualTo",
            "value": "update"
          },
          "name": "logicapp"
        },
        {
          "type": 3,
          "content": {
            "version": "KqlItem/1.0",
            "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"/subscriptions/{SubscriptionName:id}/providers/Microsoft.Authorization/locks\",\"urlParams\":[{\"key\":\"api-version\",\"value\":\"2016-09-01\"}],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.value\",\"columns\":[]}}]}",
            "size": 1,
            "title": "Resource locks are leveraged to protect critical infrastructure of this workload",
            "queryType": 12,
            "gridSettings": {
              "formatters": [
                {
                  "columnMatch": "type",
                  "formatter": 5
                }
              ],
              "labelSettings": [
                {
                  "columnId": "properties",
                  "label": "Locktype"
                },
                {
                  "columnId": "id",
                  "label": "Resource details"
                },
                {
                  "columnId": "name",
                  "label": "Resourcelock name "
                }
              ]
            }
          },
          "conditionalVisibility": {
            "parameterName": "wbtab",
            "comparison": "isEqualTo",
            "value": "compliance"
          },
          "name": "resourcelocks"
        },
        {
          "type": 3,
          "content": {
            "version": "KqlItem/1.0",
            "query": "SigninLogs\r\n| where TimeGenerated {TimeRange:value}\r\n| extend status= case( Status.errorcode==0, \"Success\", \"Failure\")\r\n//| where status has \"Success\"\r\n| project  TimeGenerated, UserPrincipalName, AppDisplayName, ConditionalAccessStatus,CorrelationId, status",
            "size": 1,
            "title": "Conditional access policies are implemented for users of this workload",
            "timeContextFromParameter": "TimeRange",
            "showExportToExcel": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces",
            "crossComponentResources": [
              "{Workspace}"
            ]
          },
          "conditionalVisibility": {
            "parameterName": "wbtab",
            "comparison": "isEqualTo",
            "value": "logs"
          },
          "name": "CApolicy"
        },
        {
          "type": 3,
          "content": {
            "version": "KqlItem/1.0",
            "query": "SigninLogs\r\n| project TimeGenerated, ClientAppUsed, UserPrincipalName, Status, AppDisplayName, ResourceDisplayName, CorrelationId, City = tostring(LocationDetails.city), Country = tostring(LocationDetails.countryOrRegion), IPAddress\r\n| where TimeGenerated {TimeRange:value}\r\n | extend  status = case(Status.errorCode == 0, \"Success\", \"Failure\")\r\n | where status contains \"Success\"\r\n| where ClientAppUsed != \"Browser\" and ClientAppUsed != \"Mobile Apps and Desktop clients\"\r\n | extend Protocol = case(ClientAppUsed != \"\", ClientAppUsed, \"Unknown\")\r\n| project TimeGenerated, UserPrincipalName, Protocol, AppDisplayName, ResourceDisplayName, status, CorrelationId, City, Country, IPAddress\r\n| sort by TimeGenerated desc",
            "size": 1,
            "showAnalytics": true,
            "title": "Modern authentication protocols (OAuth 2.0, OpenID) are used by this workload",
            "timeContextFromParameter": "TimeRange",
            "showRefreshButton": true,
            "showExportToExcel": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces",
            "crossComponentResources": [
              "{Workspace}"
            ],
            "gridSettings": {
              "filter": true
            }
          },
          "conditionalVisibility": {
            "parameterName": "wbtab",
            "comparison": "isEqualTo",
            "value": "logs"
          },
          "name": "legacysignins"
        },
        {
          "type": 3,
          "content": {
            "version": "KqlItem/1.0",
            "query": "AuditLogs\r\n| where  OperationName has \"PIM\"",
            "size": 1,
            "showAnalytics": true,
            "title": "There are processes and tools being used to manage privileged activities. Long standing administrative access is avoided whenever possible.",
            "noDataMessage": "Azure AD Audit Logs are missing in this selected workspace",
            "showRefreshButton": true,
            "showExportToExcel": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces",
            "crossComponentResources": [
              "{Workspace}"
            ],
            "gridSettings": {
              "filter": true
            }
          },
          "conditionalVisibility": {
            "parameterName": "wbtab",
            "comparison": "isEqualTo",
            "value": "logs"
          },
          "name": "PIM"
        },
        {
          "type": 3,
          "content": {
            "version": "KqlItem/1.0",
            "query": "SecurityAlert\r\n| where ProviderName has \"IPC\"",
            "size": 1,
            "showAnalytics": true,
            "title": "Identity related risk events related to potentially compromised identities are actively monitored.",
            "noDataMessage": "Security Alerts are missing in this selected workspace",
            "showRefreshButton": true,
            "showExportToExcel": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces",
            "crossComponentResources": [
              "{Workspace}"
            ],
            "gridSettings": {
              "filter": true
            }
          },
          "conditionalVisibility": {
            "parameterName": "wbtab",
            "comparison": "isEqualTo",
            "value": "logs"
          },
          "name": "IdentityAlerts"
        }
      ],
      "isLocked": false,
      "fallbackResourceIds": [
        "azure security center"
      ],
      "fromTemplateId": "WellArchitectedFrameworkSecurityAssessment"
    }
  },
  "resources": [
    {
      "name": "[parameters('workbookId')]",
      "type": "microsoft.insights/workbooks",
      "location": "[resourceGroup().location]",
      "apiVersion": "2021-03-08",
      "dependsOn": [],
      "kind": "shared",
      "properties": {
        "displayName": "[parameters('workbookDisplayName')]",
        "serializedData": "[string(variables('workbookContent'))]",
        "version": "1.0",
        "sourceId": "[parameters('workbookSourceId')]",
        "category": "[parameters('workbookType')]"
      }
    }
  ],
  "outputs": {
    "workbookId": {
      "type": "string",
      "value": "[resourceId( 'microsoft.insights/workbooks', parameters('workbookId'))]"
    }
  },
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
}