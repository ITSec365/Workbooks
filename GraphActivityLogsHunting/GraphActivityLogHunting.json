{
  "contentVersion": "1.0.0.0",
  "parameters": {
    "workbookDisplayName": {
      "type": "string",
      "defaultValue": "Graph Activity Log Hunting",
      "metadata": {
        "description": "The friendly name for the workbook that is used in the Gallery or Saved List.  This name must be unique within a resource group."
      }
    },
    "workbookType": {
      "type": "string",
      "defaultValue": "workbook",
      "metadata": {
        "description": "The gallery that the workbook will been shown under. Supported values include workbook, tsg, etc. Usually, this is 'workbook'"
      }
    },
    "workbookSourceId": {
      "type": "string",
      "defaultValue": "azure monitor",
      "metadata": {
        "description": "The id of resource instance to which the workbook will be associated"
      }
    },
    "workbookId": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "metadata": {
        "description": "The unique guid for this workbook instance"
      }
    }
  },
  "resources": [
    {
      "name": "[parameters('workbookId')]",
      "type": "microsoft.insights/workbooks",
      "location": "[resourceGroup().location]",
      "apiVersion": "2022-04-01",
      "dependsOn": [],
      "kind": "shared",
      "properties": {
        "displayName": "[parameters('workbookDisplayName')]",
        "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"df463e9b-ef40-49d1-9954-897c81505807\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"subscription\",\"type\":6,\"description\":\"Select Subscription where Log Analytic Workspace with Graph Activity Logs is available\",\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"typeSettings\":{\"resourceTypeFilter\":{\"microsoft.resources/subscriptions\":true,\"microsoft.resourcegraph/resources\":true},\"additionalResourceOptions\":[\"value::all\"],\"includeAll\":false,\"showDefault\":false},\"timeContext\":{\"durationMs\":86400000},\"value\":[\"/subscriptions/4609c440-1433-4cc4-82e1-1618f7e4389f\"]},{\"id\":\"30e692ac-e2ce-4144-861e-a2c7019eb490\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"LAWorkspace\",\"type\":5,\"description\":\"Select Workspace where Graph Activity Logs are available\",\"isRequired\":true,\"query\":\"resources\\r\\n| where type =~ 'microsoft.operationalinsights/workspaces'\\r\\n| project id\",\"crossComponentResources\":[\"{subscription}\"],\"typeSettings\":{\"additionalResourceOptions\":[]},\"timeContext\":{\"durationMs\":86400000},\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\",\"value\":\"/subscriptions/4609c440-1433-4cc4-82e1-1618f7e4389f/resourceGroups/ASRdemo/providers/Microsoft.OperationalInsights/workspaces/aiplawdemo\"},{\"id\":\"1bddedef-c506-4b73-b6fb-6b4565ac4f26\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TimeRange\",\"type\":4,\"typeSettings\":{\"selectableValues\":[{\"durationMs\":3600000},{\"durationMs\":14400000},{\"durationMs\":86400000},{\"durationMs\":259200000}],\"allowCustom\":true},\"timeContext\":{\"durationMs\":86400000},\"value\":{\"durationMs\":259200000}}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.resourcegraph/resources\"},\"name\":\"parameters - 0\"},{\"type\":1,\"content\":{\"json\":\"## Graph Activty Log Hunting Workbook\\r\\n\\r\\nThis Workbook provides sample hunting queries using Graph Activity Logs. This is based on the blog written by Microsoft DART team. https://techcommunity.microsoft.com/t5/microsoft-security-experts-blog/hunting-with-microsoft-graph-activity-logs/ba-p/4234632\",\"style\":\"info\"},\"name\":\"text - 24\"},{\"type\":11,\"content\":{\"version\":\"LinkItem/1.0\",\"style\":\"tabs\",\"links\":[{\"id\":\"28cffff2-af9c-41c5-8051-7e3c488f9bea\",\"cellValue\":\"tab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Summary\",\"subTarget\":\"summary\",\"style\":\"link\"},{\"id\":\"d7bb5411-cd24-419a-bc30-3b7db73cd13d\",\"cellValue\":\"tab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Reconnaissance\",\"subTarget\":\"recon\",\"style\":\"link\"},{\"id\":\"d16a9c61-c48d-493e-b55b-5c4b562756c5\",\"cellValue\":\"tab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Privilege escalation\",\"subTarget\":\"escalation\",\"style\":\"link\"},{\"id\":\"fe56aec5-3b61-4050-b381-4f84f4307459\",\"cellValue\":\"tab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Lateral movement\",\"subTarget\":\"movement\",\"style\":\"link\"},{\"id\":\"74e741da-f24f-409a-96c2-34e7f1856cce\",\"cellValue\":\"tab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Data Access/Exfiltration\",\"subTarget\":\"data\",\"style\":\"link\"},{\"id\":\"7f183139-5601-42e2-95c2-83846cc5d69b\",\"cellValue\":\"tab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Audit\",\"subTarget\":\"audit\",\"style\":\"link\"}]},\"name\":\"links - 19\"},{\"type\":1,\"content\":{\"json\":\"Below Summary table provides the number of attempts by a specific ID from a specific IP Address. Review them for any anomaly in access attempts.\",\"style\":\"info\"},\"conditionalVisibility\":{\"parameterName\":\"tab\",\"comparison\":\"isEqualTo\",\"value\":\"summary\"},\"name\":\"text - 8\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"MicrosoftGraphActivityLogs\\r\\n| extend Id = iff(isempty(UserId), ServicePrincipalId, UserId)\\r\\n| extend Type = iff(isempty(UserId), \\\"ServicePrincipal\\\", \\\"User\\\")\\r\\n| extend GeoIPInfo = geo_info_from_ip_address(IPAddress)\\r\\n| extend country = tostring(parse_json(GeoIPInfo).country)\\r\\n| extend state = tostring(parse_json(GeoIPInfo).state)\\r\\n| extend city = tostring(parse_json(GeoIPInfo).city)\\r\\n| summarize RequestCount=count() by Id, Type, IPAddress, country,state,city, RequestUri, ResponseStatusCode\\r\\n| sort by RequestCount\",\"size\":0,\"showAnalytics\":true,\"title\":\"Summary\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{LAWorkspace}\"]},\"conditionalVisibility\":{\"parameterName\":\"tab\",\"comparison\":\"isEqualTo\",\"value\":\"summary\"},\"name\":\"Summary\"},{\"type\":1,\"content\":{\"json\":\"If a bad actor gains access to the tenant, the Microsoft Graph API can be misused to enable reconnaissance scenarios, such as enumerating users, groups, and roles, collecting metadata and configuration details, discovering misconfigured mailboxes, and retrieving app registrations, consents, and scopes. Numerous open-source tools are available to facilitate these activities.Reconnaissance/Discovery table provides the number of such standard API calls within the brief period.Please update the query as needed for specific scenario.\",\"style\":\"info\"},\"conditionalVisibility\":{\"parameterName\":\"tab\",\"comparison\":\"isEqualTo\",\"value\":\"recon\"},\"name\":\"text - 9\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let calls= dynamic([\\\"https://graph.microsoft.com/beta/groups\\\",\\\"https://graph.microsoft.com/beta/users\\\", \\\"https://graph.microsoft.com/v1.0/users\\\", \\\"https://graph.microsoft.com/v1.0/groups\\\", \\\"https://graph.microsoft.com/v1.0/search/query\\\", \\\"https://graph.microsoft.com/v1.0/directoryRoles\\\", \\\"https://graph.microsoft.com/beta/roleManagement/directory/estimateAccess\\\", \\\"https://graph.microsoft.com//beta/policies/authorizationPolicy\\\",\\\"https://graph.microsoft.com/beta/roleManagement/directory/roleDefinitions\\\", \\\"https://graph.microsoft.com/v1.0/roleManagement/directory/roleDefinitions\\\"]);\\r\\nMicrosoftGraphActivityLogs\\r\\n| where ResponseStatusCode == '200'\\r\\n| where RequestUri in~ (calls)\\r\\n| extend Id =iff(isempty( UserId), ServicePrincipalId, UserId)\\r\\n| extend Type =iff(isempty( UserId), \\\"ServicePrincipal\\\", \\\"User\\\")\\r\\n| summarize MinTime= min(TimeGenerated), MaxTime=max(TimeGenerated), UinqueCalls= dcount(RequestUri), Callsmade=count(), UserAgent=make_set(UserAgent), URLs=make_set(RequestUri) by IPAddress, bin(TimeGenerated, 2m), Id,Type\\r\\n//| where datetime_diff('second',MaxTime, MinTime)<100 and ((UinqueCalls >=3 and Callsmade >=40) or Callsmade >100) \\r\\n\\r\\n\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Reconnaissance/Discovery\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{LAWorkspace}\"]},\"conditionalVisibility\":{\"parameterName\":\"tab\",\"comparison\":\"isEqualTo\",\"value\":\"recon\"},\"name\":\"Reconnaissance/Discovery\"},{\"type\":1,\"content\":{\"json\":\"Microsoft Graph provides several methods to escalate account privileges. These include assigning directory roles to users, adding users to privileged groups, creating service principals, and assigning roles. The following Privilege escalation table provides role changes in Microsoft Graph activity logs, which also show when a role is added. Investigators should examine the result using audit logs or other available logs to provide further context and to distinguish between legitimate and unauthorized activity.\",\"style\":\"info\"},\"conditionalVisibility\":{\"parameterName\":\"tab\",\"comparison\":\"isEqualTo\",\"value\":\"escalation\"},\"name\":\"text - 10\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"MicrosoftGraphActivityLogs\\r\\n| where RequestUri has_all (\\\"https://graph.microsoft.com/\\\", \\\"/directoryRoles/\\\", \\\"members/$ref\\\")\\r\\n| where RequestMethod == \\\"POST\\\"\\r\\n| where ResponseStatusCode in (\\\"204\\\")\\r\\n| extend Role = tostring(split(RequestUri, \\\"/\\\")[-3]) //Role can be looked up in Auditlogs\\r\\n| project  TimeGenerated, IPAddress, RequestUri, ResponseStatusCode, Role, UserAgent, AppId\",\"size\":0,\"showAnalytics\":true,\"title\":\"Privilege escalation\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{LAWorkspace}\"]},\"conditionalVisibility\":{\"parameterName\":\"tab\",\"comparison\":\"isEqualTo\",\"value\":\"escalation\"},\"name\":\"Privilege escalation\"},{\"type\":1,\"content\":{\"json\":\"After compromising a user identity or a service principal, an actor can send phishing emails to users within the organization. This can potentially lead to the compromise of further identities and facilitate lateral movement. The following sendMail table provides the use of sendMail in the URI and lists every email sent using Microsoft Graph API. It distinguishes between delegated and application-based permissions and provides user information by combining it with the IdentityInfo table.\",\"style\":\"info\"},\"conditionalVisibility\":{\"parameterName\":\"tab\",\"comparison\":\"isEqualTo\",\"value\":\"movement\"},\"name\":\"text - 11\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"MicrosoftGraphActivityLogs\\r\\n| where RequestUri has \\\"/sendMail/\\\"\\r\\n| where ResponseStatusCode == \\\"202\\\"\\r\\n| extend EmailSentFrom= tostring(split(RequestUri,\\\"/\\\")[-2])\\r\\n| extend Id =iff(isempty( UserId), ServicePrincipalId, UserId)\\r\\n| extend Type =iff(isempty( UserId), \\\"ServicePrincipal\\\", \\\"User\\\")\\r\\n//| where Type==\\\"ServicePrincipal\\\"\\r\\n//| join kind=leftouter IdentityInfo on $left.EmailSentFrom == $right.AccountObjectId\\r\\n//| summarize count() by AppId, AccountUPN, UserAgent\\r\\n| extend JoinKey = case(Type == \\\"ServicePrincipal\\\", EmailSentFrom, Type == \\\"User\\\", UserId, \\\"\\\")\\r\\n| join kind=leftouter (IdentityInfo | extend JoinKey = AccountObjectId | summarize arg_max(TimeGenerated, *) by JoinKey ) on  JoinKey\\r\\n| extend AccountUPN = coalesce(AccountUPN, EmailSentFrom)\\r\\n| project-reorder TimeGenerated, Type, AppId, MailAddress, RequestUri, ResponseStatusCode, UserAgent, AccountUPN\",\"size\":0,\"showAnalytics\":true,\"title\":\"sendMail detection\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{LAWorkspace}\"]},\"conditionalVisibility\":{\"parameterName\":\"tab\",\"comparison\":\"isEqualTo\",\"value\":\"movement\"},\"name\":\"sendMail detection\"},{\"type\":1,\"content\":{\"json\":\"Below table summarizes the emails sent by service principals. Reviewing the app ID and service principal can help verify that the applications are allowed to send emails.\",\"style\":\"info\"},\"conditionalVisibility\":{\"parameterName\":\"tab\",\"comparison\":\"isEqualTo\",\"value\":\"movement\"},\"name\":\"text - 13\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"MicrosoftGraphActivityLogs \\r\\n| where ResponseStatusCode == \\\"202\\\"\\r\\n| where RequestUri endswith \\\"/sendMail\\\" and RequestUri has \\\"/users/\\\"  //Looking for the user's API in terms of ServicePrincipal access\\r\\n| extend EmailSentFrom =  tostring(split(RequestUri, \\\"/\\\")[-2])\\r\\n| extend Id = iff(isempty(UserId), ServicePrincipalId, UserId)\\r\\n| extend Type = iff(isempty(UserId), \\\"ServicePrincipal\\\", \\\"User\\\")\\r\\n| where Type == \\\"ServicePrincipal\\\"\\r\\n| join kind=leftouter (IdentityInfo | summarize arg_max(TimeGenerated, *) by AccountObjectId ) on $left.EmailSentFrom == $right.AccountObjectId\\r\\n| extend AccountUPN = coalesce(AccountUPN, EmailSentFrom)\\r\\n| summarize EmailsSentCount=count(), SentFromUsers=make_set(AccountUPN), UserAgents=make_set(UserAgent) by AppId \",\"size\":0,\"showAnalytics\":true,\"title\":\"sendMail detection-Service Principals\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{LAWorkspace}\"]},\"conditionalVisibility\":{\"parameterName\":\"tab\",\"comparison\":\"isEqualTo\",\"value\":\"movement\"},\"name\":\"sendMail detection - Copy\"},{\"type\":1,\"content\":{\"json\":\"The Microsoft Graph API includes functions that can be misused by a threat actor to access and read emails from users' mailboxes.Below email access table can be used to hunt for Microsoft Graph API calls which are used to read mail from a users’ mailbox.It reveals statistics about the applications or users used for reading emails, along with the number of unique mailboxes accessed and their respective timeframes. Note that this query also uses the IdentityInfo table.\\r\\n\\r\\n \",\"style\":\"info\"},\"conditionalVisibility\":{\"parameterName\":\"tab\",\"comparison\":\"isEqualTo\",\"value\":\"data\"},\"name\":\"text - 14\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"MicrosoftGraphActivityLogs\\r\\n| where RequestMethod == \\\"GET\\\"\\r\\n| where RequestUri has_all (\\\"https://graph.microsoft.com\\\", \\\"/users/\\\", \\\"/messages\\\")\\r\\n| where ResponseStatusCode == \\\"200\\\"\\r\\n| extend Id = iff(isempty(UserId), ServicePrincipalId, UserId)\\r\\n| extend ObjectType = iff(isempty(UserId), \\\"ServicePrincipal\\\", \\\"User\\\")\\r\\n| extend MailboxTargetUPN = tostring(extract_all( @'https://graph.microsoft.com/v.../users/([^/]*)/', RequestUri)[0]) //Parses the AccountUPN\\r\\n| extend UserGuid= tostring(extract_all( @'*.(\\\\b[0-9a-fA-F]{8}(?:-[0-9a-fA-F]{4}){3}\\\\b-[0-9a-fA-F]{12}).*', RequestUri)[0]) //Parses the object-ID of an targeted identity\\r\\n| join kind=leftouter (IdentityInfo |  where TimeGenerated > ago(30d) | summarize arg_max(TimeGenerated, *) by AccountObjectId | project TargetUPN=AccountUPN, AccountObjectId) on $left.UserGuid==$right.AccountObjectId\\r\\n| extend TargetUPN = coalesce(TargetUPN, MailboxTargetUPN)\\r\\n| summarize MinTime=min(TimeGenerated), MaxTime=max(TimeGenerated), MailBoxAccessCount=dcount(TargetUPN), Targets=make_set(TargetUPN) by AppId, ObjectType, Id \",\"size\":0,\"showAnalytics\":true,\"title\":\"Email Access Details\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{LAWorkspace}\"]},\"conditionalVisibility\":{\"parameterName\":\"tab\",\"comparison\":\"isEqualTo\",\"value\":\"data\"},\"name\":\"query - 15\"},{\"type\":1,\"content\":{\"json\":\"Actors can use Microsoft Graph to download sensitive files or data from any user’s OneDrive accounts or SharePoint. By illegitimately using file capabilities in Microsoft Graph, a bad actor can access and download confidential documents even without direct access to those files. The following Download Activity table is a good starting point for investigating Microsoft Graph API calls related to download activities. Analyze the UserAgent and AppID to determine whether these activities are expected in your environment. Note that the Item ID cannot be resolved to identify the downloaded item, but CloudApp events (or Office Activity logs) can be correlated to provide further context for this download activity.\",\"style\":\"info\"},\"conditionalVisibility\":{\"parameterName\":\"tab\",\"comparison\":\"isEqualTo\",\"value\":\"data\"},\"name\":\"text - 15\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"MicrosoftGraphActivityLogs\\r\\n| where RequestMethod == \\\"GET\\\" \\r\\n| where ResponseStatusCode in (\\\"302\\\", \\\"200\\\")       // https://learn.microsoft.com/en-us/graph/api/driveitem-get-content?view=graph-rest-1.0&tabs=http#response, normal response code returns a \\\"302 Found\\\" response redirecting to a preauthenticated download URL. \\r\\n| where RequestUri matches regex @\\\"https://graph\\\\.microsoft\\\\.com/.*/items/.*/content\\\" and RequestUri matches regex @\\\"/drives?/.*\\\" and RequestUri !has \\\"/thumbnails/\\\"\\r\\n| project  TimeGenerated, ResponseStatusCode, RequestMethod, IPAddress, UserAgent, RequestUri, AppId \",\"size\":0,\"showAnalytics\":true,\"title\":\"Download Activty details \",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{LAWorkspace}\"]},\"conditionalVisibility\":{\"parameterName\":\"tab\",\"comparison\":\"isEqualTo\",\"value\":\"data\"},\"name\":\"Download Activty details \"},{\"type\":1,\"content\":{\"json\":\"When it comes to impact, Microsoft Graph API includes multiple functions that can be misused to allow unauthorized access to sensitive data and resources. This could lead to account access removals, data destruction, and/or resource hijacking. Such activities can significantly disrupt business operations, result in financial losses, and damage an organization’s reputation. The following Delete table identifies delete requests and the associated User ID. AppID and UserAgent can be used for further investigation to determine if this behavior is expected.\",\"style\":\"info\"},\"conditionalVisibility\":{\"parameterName\":\"tab\",\"comparison\":\"isEqualTo\",\"value\":\"data\"},\"name\":\"text - 16\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"MicrosoftGraphActivityLogs\\r\\n| where RequestMethod == \\\"DELETE\\\"\\r\\n| where RequestUri matches regex @\\\"/users/[0-9a-fA-F-]{36}$\\\"\\r\\n| where ResponseStatusCode == \\\"204\\\"\\r\\n| extend DeletedUserID =  tostring(split(RequestUri, \\\"/\\\")[-1])\\r\\n| join kind=leftouter (IdentityInfo | summarize arg_max(TimeGenerated, *) by AccountObjectId ) on $left.DeletedUserID == $right.AccountObjectId \\r\\n| project-reorder  TimeGenerated, ResponseStatusCode, RequestMethod, IPAddress, UserAgent, RequestUri, AppId, AccountDisplayName, AccountUPN \",\"size\":0,\"showAnalytics\":true,\"title\":\"Delete Activity Details\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{LAWorkspace}\"]},\"conditionalVisibility\":{\"parameterName\":\"tab\",\"comparison\":\"isEqualTo\",\"value\":\"data\"},\"name\":\"query - 17\"},{\"type\":1,\"content\":{\"json\":\"Conducting regular audits of Entra applications that use the Microsoft Graph API can reveal whether an application has excessive permissions or if an application is accessing Microsoft Graph API unexpectedly or inappropriately. This can indicate a possible service principal compromise.Application Governance in Defender portal can be used to monitor and alert High Privileged OAuth Applications. The following \\\"High Privileged Roles used\\\" table  helps to identify the types of Entra applications that have accesses with high-impact permissions.\",\"style\":\"info\"},\"conditionalVisibility\":{\"parameterName\":\"tab\",\"comparison\":\"isEqualTo\",\"value\":\"audit\"},\"name\":\"text - 18\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"MicrosoftGraphActivityLogs\\r\\n| extend Type =iff(isempty( UserId), \\\"ServicePrincipal\\\", \\\"User\\\")\\r\\n| where Type== \\\"ServicePrincipal\\\"\\r\\n| extend RolesTemp= split(Roles, \\\" \\\")\\r\\n| mv-expand RolesTemp\\r\\n| where RolesTemp has_any (\\\"MailboxSettings\\\",\\\"User.ReadWrite.All\\\",\\\"AppRolesAsssignment.ReadWrite.All\\\",\\\"Mail.ReadWrite\\\",\\\"Contacts\\\" )\\r\\n| extend Role=tostring(RolesTemp)\\r\\n| summarize Calls=count(), MinTime=min(TimeGenerated), MaxTime=max(TimeGenerated) by AppId, Role\",\"size\":0,\"showAnalytics\":true,\"title\":\"High Privileged Roles used\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{LAWorkspace}\"]},\"conditionalVisibility\":{\"parameterName\":\"tab\",\"comparison\":\"isEqualTo\",\"value\":\"audit\"},\"name\":\"High Privileged Roles used\"},{\"type\":1,\"content\":{\"json\":\"Below table provides user details who are running Graph API queries. It needs IdentityInfo logs to get further information about User. however, this does not include information about service principals.\",\"style\":\"info\"},\"conditionalVisibility\":{\"parameterName\":\"tab\",\"comparison\":\"isEqualTo\",\"value\":\"audit\"},\"name\":\"text - 21\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"MicrosoftGraphActivityLogs\\r\\n| where isnotempty(UserId)\\r\\n| join kind=leftouter IdentityInfo on $left.UserId == $right.AccountObjectId\\r\\n| where isnotempty(AccountUPN)\\r\\n| project-reorder TimeGenerated, AppId, IPAddress, AccountUPN, AccountCreationTime, AssignedRoles, ServicePrincipalId, RequestId, RequestMethod, ResponseStatusCode, RequestUri, ResponseSizeBytes, Roles\",\"size\":0,\"showAnalytics\":true,\"title\":\"Users running Graph API queries\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{LAWorkspace}\"]},\"conditionalVisibility\":{\"parameterName\":\"tab\",\"comparison\":\"isEqualTo\",\"value\":\"audit\"},\"name\":\"High Privileged Roles used - Copy\"},{\"type\":1,\"content\":{\"json\":\"Below table provides risky user details who are running Graph API queries. It needs AADRiskyUsers logs to get further information about User. \",\"style\":\"info\"},\"conditionalVisibility\":{\"parameterName\":\"tab\",\"comparison\":\"isEqualTo\",\"value\":\"audit\"},\"name\":\"text - 21 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"MicrosoftGraphActivityLogs\\r\\n| where isnotempty(UserId)\\r\\n| join AADRiskyUsers on $left.UserId == $right.Id\",\"size\":0,\"showAnalytics\":true,\"title\":\"Risky Users running Graph API queries\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{LAWorkspace}\"]},\"conditionalVisibility\":{\"parameterName\":\"tab\",\"comparison\":\"isEqualTo\",\"value\":\"audit\"},\"name\":\"High Privileged Roles used - Copy - Copy\"}],\"isLocked\":false,\"fallbackResourceIds\":[\"azure monitor\"]}",
        "version": "1.0",
        "sourceId": "[parameters('workbookSourceId')]",
        "category": "[parameters('workbookType')]"
      }
    }
  ],
  "outputs": {
    "workbookId": {
      "type": "string",
      "value": "[resourceId( 'microsoft.insights/workbooks', parameters('workbookId'))]"
    }
  },
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
}